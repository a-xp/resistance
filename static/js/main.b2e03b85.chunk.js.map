{"version":3,"sources":["domain/icons/soldier.svg","domain/icons/anonymous.svg","domain/icons/captain.svg","domain/icons/captain-red.svg","domain/icons/ninja.svg","domain/icons/bodyguard.svg","cred.js","firebase.js","api/enum.js","domain/roles.js","domain/missions.js","api/game.js","components/Enter/index.js","components/Room/BottomMenu/index.js","components/Room/MembersList/index.js","components/Room/RoleCustomizeForm/index.js","components/Room/PlaySession/ParticipantsForm/index.js","components/Room/PlaySession/MissionStatus/index.js","components/Room/PlaySession/ParticipantsStage/index.js","components/Room/PlaySession/VoteForm/index.js","components/Room/PlaySession/DefectorMessage/index.js","components/Room/VotesList/index.js","components/Room/PlaySession/index.js","components/Room/ScoreBoard/index.js","components/Room/Board/index.js","components/Room/index.js","api/store.js","components/App/index.js","index.js","domain/icons/secret-agent.svg"],"names":["module","exports","__webpack_require__","p","firebaseCred","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","db","firestore","STATUS","NEW","STARTED","FINISHED","TEAM","BAD","GOOD","RANDOM","GAME_TYPE","CLASSIC","AVALON","OP_STATUS","PREPARE","VOTE","PROGRESS","REJECTED","SUCCESS","FAIL","isTerminal","status","ROLES","RESISTANCE","SPY","BODY_GUARD","COMMANDER","FALSE_COMMANDER","ASSASSIN","UNKNOWN","SPY_DEFECTOR","DEFECTOR","DEEP_COVER_SPY","BLIND_SPY","roleTraits","_roleTraits","Object","defineProperty","id","side","title","icon","assassinIcon","core","falseCommanderIcon","info","spyIcon","base","commanderIcon","bodyGuardIcon","resistanceIcon","anonymousIcon","teamTraits","_teamTraits","color","success","fail","assignRoles","playersPrefSide","gameRoles","teams","_playersPrefSide$redu","_ref","reduce","result","i","objectSpread","concat","toConsumableArray","players","shuffle","slice","teamSize","length","splitTeams","Array","good","bad","filter","r","forEach","shift","array","j","Math","floor","random","_ref2","5","6","7","8","9","10","getRoleVision","ownRole","visionRole","console","log","getDefectorTurns","roles","ceil","participantsCount","getScore","missions","_missions$reduce","m","_callee","type","login","prefSide","secret","ref","regenerator_default","a","wrap","_context","prev","next","makeSecret","collection","add","members","host","sent","abrupt","roomId","stop","_callee3","roomRef","_context3","doc","runTransaction","asyncToGenerator","mark","_callee2","transaction","roomDoc","room","_context2","get","exists","Error","data","some","update","_x17","apply","this","arguments","_callee4","cred","_context4","find","Promise","reject","_callee6","_context6","_callee5","numPlayers","_score","defectorTurn","newMembers","_context5","map","team","role","originalRole","num","leader","participants","score","_x18","_callee8","_context8","_ref3","_callee7","_context7","_x19","_callee10","_context10","_ref4","_callee9","kicked","_context9","_x20","_callee12","_context12","_ref5","_callee11","_context11","_x21","_callee14","mutator","_context14","_ref6","_callee13","mission","_context13","_x22","toString","replace","_callee16","_context16","_ref7","_callee15","lastMission","_context15","includes","lastId","_x23","gameApi","create","join","listenRoom","cb","onSnapshot","start","end","kick","setRoles","updateCurrentMission","nextMission","Enter","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","state","joinErrMsg","createErrMsg","window","location","hash","form","React","createRef","joinPane","react_default","createElement","Tab","Pane","Form","Message","negative","Header","Field","label","control","name","defaultValue","Group","grouped","value","defaultChecked","Button","primary","fluid","onClick","onJoin","createPane","onCreate","onEnter","props","serialize","ReactDOM","current","then","err","setState","msg","message","game","inherits","createClass","key","panes","menuItem","render","Component","BottomMenu","_this$props","onTabSet","onLeave","className","btnClass","TABS","MEMBERS","BOARD","HISTORY","menuTab","tab","MembersList","user","userRole","userTeam","src","alt","t","List","verticalAlign","size","celled","member","getVision","Item","Image","avatar","Content","Description","floated","Icon","_this$props2","api","options","values","RoleCustomizeForm","_room$roles","Fragment","href","toggleRole","checked","onChange","_this$props2$room$rol","_this$props3","ParticipantsForm","missionNum","numParticipants","mid","toggleParticipant","propose","MissionStatus","ParticipantsStage","leaderVision","MissionStatus_MissionStatus","participant","vision","VoteForm","_mission$vote","vote","curVote","findIndex","resolution","userNum","_Object$values$reduce","DefectorMessage","VotesList","PlaySession","showParticipantsForm","ParticipantsForm_ParticipantsForm","ParticipantsStage_ParticipantsStage","VoteForm_VoteForm","setMissionResult","VotesList_VotesList","DefectorMessage_DefectorMessage","ScoreBoard","Board","RoleCustomizeForm_RoleCustomizeForm","PlaySession_PlaySession","ScoreBoard_ScoreBoard","Room","errMsg","removeListener","clearErr","catch","_this2","_this$state","u","MembersList_MembersList","leave","Board_Board","BottomMenu_BottomMenu","centered","as","_this3","credApi","setCred","localStorage","setItem","JSON","stringify","getCred","str","getItem","parse","clearCred","removeItem","App","ready","tryLogin","Enter_Enter","Room_Room","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b2e03b85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/soldier.1cc063fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymous.6898e435.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain.fc758069.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain-red.09706776.svg\";","module.exports = __webpack_public_path__ + \"static/media/ninja.9ff8d9ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/bodyguard.fb712ee8.svg\";","\r\nconst firebaseCred = {\r\n    apiKey: \"AIzaSyCVuB9PRtMCoDcYNR70NWWtTuJu3GU0FKM\",\r\n    authDomain: \"random-role.firebaseapp.com\",\r\n    databaseURL: \"https://random-role.firebaseio.com\",\r\n    projectId: \"random-role\",\r\n    storageBucket: \"random-role.appspot.com\",\r\n    messagingSenderId: \"71043698352\"\r\n};\r\n\r\nexport default firebaseCred;","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport firebaseCred from \"./cred\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: firebaseCred.apiKey,\r\n    authDomain: firebaseCred.authDomain,\r\n    projectId: firebaseCred.projectId\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","export const STATUS = {\r\n  NEW: 'NEW',\r\n  STARTED: 'STARTED',\r\n  FINISHED: 'FINISHED'\r\n};\r\n\r\nexport const TEAM = {\r\n  BAD: 'BAD',\r\n  GOOD: 'GOOD',\r\n  RANDOM: 'RANDOM'\r\n};\r\n\r\nexport const GAME_TYPE = {\r\n  CLASSIC: 'CLASSIC',\r\n  AVALON: 'AVALON'\r\n};\r\n\r\nexport const OP_STATUS = {\r\n  PREPARE: 'PREPARE',\r\n  VOTE: 'VOTE',\r\n  PROGRESS: 'PROGRESS',\r\n  REJECTED: 'REJECTED',\r\n  SUCCESS: 'SUCCESS',\r\n  FAIL: 'FAIL',\r\n    isTerminal(status) {\r\n      return status === OP_STATUS.REJECTED || status === OP_STATUS.SUCCESS || status === OP_STATUS.FAIL;\r\n    }\r\n};\r\n\r\nexport const VOTE = {\r\n  YES: 'YES',\r\n  NO: 'NO'\r\n};","import {TEAM} from \"../api/enum\";\r\nimport resistanceIcon from './icons/soldier.svg';\r\nimport spyIcon from './icons/secret-agent.svg';\r\nimport anonymousIcon from './icons/anonymous.svg';\r\nimport commanderIcon from './icons/captain.svg';\r\nimport falseCommanderIcon from './icons/captain-red.svg';\r\nimport assassinIcon from  './icons/ninja.svg';\r\nimport bodyGuardIcon from './icons/bodyguard.svg';\r\n\r\nexport const ROLES = {\r\n    RESISTANCE: 'RESISTANCE',\r\n    SPY: 'SPY',\r\n    BODY_GUARD: 'BODY_GUARD',\r\n    COMMANDER: 'COMMANDER',\r\n    FALSE_COMMANDER: 'FALSE_COMMANDER',\r\n    ASSASSIN: 'ASSASSIN',\r\n    UNKNOWN: 'UNKNOWN',\r\n    SPY_DEFECTOR: 'SPY_DEFECTOR',\r\n    DEFECTOR: 'DEFECTOR',\r\n    DEEP_COVER_SPY: 'DEEP_COVER_SPY',\r\n    BLIND_SPY: 'BLIND_SPY'\r\n};\r\n\r\nexport const roleTraits = {\r\n    [ROLES.ASSASSIN]: {id: ROLES.ASSASSIN, side: TEAM.BAD, title: 'Assassin', icon: assassinIcon, core: true},\r\n    [ROLES.FALSE_COMMANDER]: {id: ROLES.FALSE_COMMANDER, side: TEAM.BAD, title: 'False Commander', icon: falseCommanderIcon, info: 'Appears as Commander'},\r\n    [ROLES.SPY]: {id: ROLES.SPY, side: TEAM.BAD, title: 'Government spy', icon: spyIcon, base: true},\r\n    [ROLES.COMMANDER]: {id: ROLES.COMMANDER, side: TEAM.GOOD, title: 'Commander', icon:commanderIcon, core: true, info: 'Knows spies'},\r\n    [ROLES.BODY_GUARD]: {id: ROLES.BODY_GUARD, side: TEAM.GOOD, title: 'Bodyguard', icon:bodyGuardIcon, info: 'Knows commanders'},\r\n    [ROLES.RESISTANCE]: {id: ROLES.RESISTANCE, side: TEAM.GOOD, title: 'Member of the Resistance', icon:resistanceIcon, base: true},\r\n    [ROLES.UNKNOWN]: {id: ROLES.UNKNOWN, icon: anonymousIcon},\r\n    [ROLES.SPY_DEFECTOR]: {id:ROLES.SPY_DEFECTOR, side:TEAM.BAD, title: 'Spy Defector', icon: spyIcon, info: 'Might switch side'},\r\n    [ROLES.DEFECTOR]: {id: ROLES.DEFECTOR, side: TEAM.GOOD, title: 'Defector', icon: resistanceIcon, info: 'Might switch side'},\r\n    [ROLES.DEEP_COVER_SPY]: {id: ROLES.DEEP_COVER_SPY, side: TEAM.BAD, title: 'Deep cover Spy', icon: spyIcon, info: 'Unknown to Commander'},\r\n    [ROLES.BLIND_SPY]: {id: ROLES.BLIND_SPY, side: TEAM.BAD, title: 'Blind Spy', icon: spyIcon, info: 'Unknown to other spies'}\r\n};\r\n\r\nexport const teamTraits = {\r\n  [TEAM.BAD]: {color: 'spy text', title: 'The Spies', success: ['3 Missions fail', 'Commander named by the Assassin']},\r\n  [TEAM.GOOD]: {color: 'resistance text', title: 'The Resistance', success: ['3 Missions are completed successfully'], fail: ['Commander named by the Spies']}\r\n};\r\n\r\nexport function assignRoles(playersPrefSide, gameRoles) {\r\n    const teams = splitTeams(playersPrefSide);\r\n    const result = Array(playersPrefSide.length);\r\n    const good = shuffle(teams[TEAM.GOOD]);\r\n    const bad = shuffle(teams[TEAM.BAD]);\r\n    [...gameRoles.filter(r => roleTraits[r].core), ...shuffle(gameRoles.filter(r => !roleTraits[r].core))].forEach(r => {\r\n        if(roleTraits[r].side === TEAM.GOOD && good.length){\r\n            result[good.shift()] = r;\r\n        }else if(roleTraits[r].side === TEAM.BAD && bad.length){\r\n            result[bad.shift()] = r;\r\n        }\r\n    });\r\n    while(good.length>0){\r\n        result[good.shift()] = ROLES.RESISTANCE;\r\n    }\r\n    while(bad.length>0){\r\n        result[bad.shift()] = ROLES.SPY;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction splitTeams(playersPrefSide) {\r\n    const teams = playersPrefSide.reduce( (result, side, i) => ({...result, [side]: [...result[side], i]}), {\r\n        [TEAM.BAD]: [],\r\n        [TEAM.GOOD]: [],\r\n        [TEAM.RANDOM]: []\r\n    });\r\n    const players = [...shuffle(teams[TEAM.GOOD]), ...shuffle(teams[TEAM.RANDOM]), ...shuffle(teams[TEAM.BAD])];\r\n    return {\r\n        [TEAM.BAD]: players.slice(teamSize[players.length]),\r\n        [TEAM.GOOD]: players.slice(0, teamSize[players.length])\r\n    }\r\n}\r\n\r\n\r\nfunction shuffle(array) {\r\n    const result = array.slice();\r\n    for (let i = result.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [result[i], result[j]] = [result[j], result[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nconst teamSize = {\r\n    5: 3, 6: 4, 7: 4, 8: 5, 9: 6, 10: 6\r\n};\r\n\r\nexport function getRoleVision(ownRole, visionRole) {\r\n    console.log(ownRole, visionRole);\r\n    switch (ownRole) {\r\n        case ROLES.SPY:\r\n        case ROLES.FALSE_COMMANDER:\r\n        case ROLES.ASSASSIN:\r\n        case ROLES.DEEP_COVER_SPY:\r\n            if(visionRole === ROLES.SPY_DEFECTOR) return ROLES.SPY;\r\n            return roleTraits[visionRole].side === TEAM.GOOD ? ROLES.RESISTANCE : visionRole;\r\n        case ROLES.BODY_GUARD: return visionRole === ROLES.COMMANDER || visionRole === ROLES.FALSE_COMMANDER ? ROLES.COMMANDER : ROLES.UNKNOWN;\r\n        case ROLES.COMMANDER:\r\n            if(visionRole === ROLES.DEEP_COVER_SPY) return ROLES.RESISTANCE;\r\n            return roleTraits[visionRole].side === TEAM.GOOD ? ROLES.RESISTANCE : ROLES.SPY;\r\n        default: return ROLES.UNKNOWN;\r\n    }\r\n}\r\n\r\nexport function getDefectorTurns(roles){\r\n    return roles.filter(r => r===ROLES.SPY_DEFECTOR || r===ROLES.DEFECTOR).length === 2 ? [\r\n        Math.ceil(Math.random()*7), Math.ceil(Math.random()*7)\r\n    ] : [];\r\n}","import {OP_STATUS, TEAM} from \"../api/enum\";\r\n\r\nexport const participantsCount = {\r\n    5:[2,3,2,3,3],\r\n    6:[2,3,4,3,4],\r\n    7:[2,3,3,4,4],\r\n    8:[3,4,4,5,5]\r\n};\r\n\r\nexport function getScore(missions) {\r\n    return missions.reduce((r, m) => {\r\n        if(m.status === OP_STATUS.FAIL) return {...r, [TEAM.BAD]: 1 + r[TEAM.BAD]};\r\n        if(m.status === OP_STATUS.SUCCESS) return {...r, [TEAM.GOOD]: 1 + r[TEAM.GOOD]};\r\n        return r;\r\n    }, {[TEAM.GOOD]: 0, [TEAM.BAD]: 0});\r\n}\r\n\r\nexport function getNextLeader(lastId, numPlayers) {\r\n    return lastId < numPlayers-1 ? lastId + 1 : 0;\r\n}\r\n","import db from '../firebase';\r\nimport {OP_STATUS, STATUS, TEAM} from \"./enum\";\r\nimport {assignRoles, getDefectorTurns, ROLES, roleTraits} from \"../domain/roles\";\r\nimport {getNextLeader, getScore} from \"../domain/missions\";\r\n\r\nasync function create(type, login, prefSide) {\r\n    const secret = makeSecret();\r\n    const ref = await db.collection('rooms').add(\r\n        {\r\n            members: [\r\n                {login, prefSide, host: true, secret}\r\n            ],\r\n            status: STATUS.NEW\r\n        }\r\n    );\r\n    return {\r\n        roomId: ref.id, secret, login\r\n    };\r\n}\r\n\r\nasync function join(id, login, prefSide) {\r\n    const roomRef = db.collection('rooms').doc(id);\r\n    const secret = makeSecret();\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        if(!roomDoc.exists){\r\n            throw new Error(\"Room not found\");\r\n        }\r\n        const room = roomDoc.data();\r\n        if(room.members.some(m => m.login === login)){\r\n            throw new Error(\"Login is in use\");\r\n        }\r\n        if(room.status !== STATUS.NEW){\r\n            throw new Error(\"The game has been started\");\r\n        }\r\n        transaction.update(roomRef, {...room, members: [...room.members, {login, prefSide, secret}]});\r\n    });\r\n    return {\r\n        roomId: id, login, secret\r\n    };\r\n}\r\n\r\nasync function login(cred) {\r\n    const {roomId, login, secret} = cred;\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    const room = await roomRef.get();\r\n    if(room.exists){\r\n        const user = room.get('members').find(m => m.login === login && m.secret === secret);\r\n        if(user){\r\n            return true;\r\n        }else{\r\n            return Promise.reject('Invalid credentials')\r\n        }\r\n    }else{\r\n        return Promise.reject('Room not found')\r\n    }\r\n}\r\n\r\nasync function start(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        const numPlayers = room.members.length;\r\n        if(numPlayers < 5 || numPlayers > 10){\r\n            throw new Error(\"Number of players should be between 5 and 10\");\r\n        }\r\n        if(room.status === STATUS.NEW){\r\n            const roles = assignRoles(room.members.map(m => m.prefSide), room.roles);\r\n            console.log(roles);\r\n            const defectorTurn = getDefectorTurns(roles);\r\n            const newMembers = room.members.map( (m,i) => ({...m, team: roleTraits[roles[i]].side, role: roles[i], originalRole: roles[i]}));\r\n            transaction.update(roomRef, {...room, members: newMembers, status: STATUS.STARTED, missions:[\r\n                    {num: 0, status: OP_STATUS.PREPARE, leader: Math.ceil(Math.random() * newMembers.length), participants: []}\r\n                ], defectorTurn, score:{[TEAM.BAD]:0, [TEAM.GOOD]:0}});\r\n        }\r\n    });\r\n}\r\n\r\nasync function end(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        transaction.update(roomRef, {...room, status: STATUS.FINISHED});\r\n    })\r\n}\r\n\r\nasync function kick(login, roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.NEW) {\r\n            const kicked = room.members.find(m => m.login === login);\r\n            if(kicked){\r\n                const newMembers = room.members.filter( m => m.login !== login);\r\n                if(kicked.host && newMembers.length){\r\n                    newMembers[0].host = true;\r\n                }\r\n                transaction.update(roomRef, {...room, members: newMembers});\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nasync function setRoles(roomId, roles) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if (room.status === STATUS.NEW) {\r\n            transaction.update(roomRef, {...room, roles});\r\n        }\r\n    });\r\n}\r\n\r\nasync function updateCurrentMission(roomId, mutator) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if (room.status === STATUS.STARTED) {\r\n            const mission = mutator(room.missions[room.missions.length-1]);\r\n            transaction.update(roomRef, {...room, missions: [...room.missions.slice(0, room.missions.length-1),\r\n                    mission]});\r\n        }\r\n    });\r\n}\r\n\r\nfunction makeSecret(){\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '');\r\n}\r\n\r\nfunction listenRoom(id, cb) {\r\n    return db.collection('rooms').doc(id).onSnapshot(cb);\r\n}\r\n\r\nasync function nextMission(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.STARTED) {\r\n            const lastMission = room.missions[room.missions.length-1];\r\n            const score = getScore(room.missions);\r\n            console.log(room, score);\r\n            if(score[TEAM.GOOD]>=3 || score[TEAM.BAD]>=3){\r\n                transaction.update(roomRef, {...room, status: STATUS.FINISHED, score});\r\n                return;\r\n            }\r\n            let members = room.members;\r\n            if(room.defectorTurn.includes(room.num)){\r\n                members = members.map(m => {\r\n                    if(m.role === ROLES.DEFECTOR) return ROLES.SPY_DEFECTOR;\r\n                    if(m.role === ROLES.SPY_DEFECTOR) return ROLES.DEFECTOR;\r\n                    return m;\r\n                })\r\n            }\r\n            transaction.update(roomRef, {\r\n                ...room, score, members, missions: [...room.missions,\r\n                    {\r\n                        status: OP_STATUS.PREPARE,\r\n                        leader: getNextLeader(lastMission.leader, room.members.length),\r\n                        participants: [],\r\n                        num: lastMission.status === OP_STATUS.REJECTED ? lastMission.num : lastMission.num + 1\r\n                    }\r\n                ]});\r\n        }\r\n    });\r\n}\r\n\r\nexport const gameApi = {create, join, listenRoom, login, start, end, kick, setRoles, updateCurrentMission, nextMission};","import React from \"react\";\r\nimport {Button, Form, Message, Tab} from \"semantic-ui-react\";\r\nimport {gameApi} from \"../../api/game\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport serialize from 'form-serialize';\r\nimport {GAME_TYPE, TEAM} from \"../../api/enum\";\r\n\r\n\r\nexport class Enter extends React.Component {\r\n\r\n    state = {\r\n        joinErrMsg: [],\r\n        createErrMsg: []\r\n    };\r\n\r\n    roomId = window.location.hash.slice(1);\r\n    form = React.createRef();\r\n\r\n    render (){\r\n        return <Tab panes={[\r\n            {menuItem: 'JOIN', render: this.joinPane},\r\n            {menuItem: 'CREATE', render: this.createPane},\r\n        ]}/>\r\n    }\r\n\r\n    joinPane = () => {\r\n        const {joinErrMsg} = this.state;\r\n        return <Tab.Pane>\r\n            <Form ref={this.form}>\r\n                {joinErrMsg && joinErrMsg.length>0 &&\r\n                    <Message negative>\r\n                        <Message.Header>Failed to join the game</Message.Header>\r\n                        {joinErrMsg.map( m => <p>{m}</p>)}\r\n                    </Message>\r\n                }\r\n                <Form.Field label='Game ID' control='input' name=\"id\" defaultValue={this.roomId}/>\r\n                <Form.Field label='Your name' control='input' name=\"login\" type=\"text\"/>\r\n                <Form.Group grouped>\r\n                    <label>Choose your side</label>\r\n                    <Form.Field label='Resistance' control='input' type='radio' name='side' value={TEAM.GOOD}/>\r\n                    <Form.Field label='Spies' control='input' type='radio' name='side' value={TEAM.BAD}/>\r\n                    <Form.Field label='Whatever' control='input' type='radio' name='side' defaultChecked value={TEAM.RANDOM}/>\r\n                </Form.Group>\r\n                <Button primary fluid onClick={this.onJoin}>JOIN</Button>\r\n            </Form>\r\n        </Tab.Pane>\r\n    };\r\n\r\n    createPane = () => {\r\n        const {createErrMsg} = this.state;\r\n        return <Tab.Pane>\r\n            <Form ref={this.form}>\r\n                {createErrMsg && createErrMsg.length>0 &&\r\n                <Message negative>\r\n                    <Message.Header>Failed to join the game</Message.Header>\r\n                    {createErrMsg.map( m => <p>{m}</p>)}\r\n                </Message>\r\n                }\r\n                <Form.Group grouped>\r\n                    <label>Choose a game</label>\r\n                    <Form.Field label='Resistance Classic' control='input' type='radio' name='game' value={GAME_TYPE.CLASSIC} defaultChecked/>\r\n                    <Form.Field label='Resistance Avalon' control='input' type='radio' name='game' value={GAME_TYPE.AVALON}/>\r\n                </Form.Group>\r\n                <Form.Field label='Your name' control='input' name='login'/>\r\n                <Form.Group grouped>\r\n                    <label>Choose your side</label>\r\n                    <Form.Field label='Resistance' control='input' type='radio' value={TEAM.GOOD} name='side'/>\r\n                    <Form.Field label='Spies' control='input' type='radio' value={TEAM.BAD} name='side'/>\r\n                    <Form.Field label='Whatever' control='input' type='radio' name='side' value={TEAM.RANDOM} defaultChecked/>\r\n                </Form.Group>\r\n                <Button primary fluid onClick={this.onCreate}>CREATE</Button>\r\n            </Form>\r\n        </Tab.Pane>\r\n    };\r\n\r\n    onJoin = () => {\r\n        const {onEnter} = this.props;\r\n        const value = serialize(ReactDOM.findDOMNode(this.form.current), {hash: true});\r\n        if(value.login && value.id && value.side){\r\n            gameApi.join(value.id, value.login, value.side).then(cred => {\r\n                onEnter && onEnter(cred);\r\n            }, err => {\r\n                this.setState({\r\n                    joinErrMsg: [err.msg || err.message || err || 'Unknown error']\r\n                })\r\n            })\r\n        }\r\n    };\r\n\r\n    onCreate = () => {\r\n        const value = serialize(ReactDOM.findDOMNode(this.form.current), {hash: true});\r\n        const {onEnter} = this.props;\r\n        if(value.side && value.login && value.game){\r\n            gameApi.create(value.game, value.login, value.side).then(cred => {\r\n                onEnter && onEnter(cred)\r\n            }, err => {\r\n                this.setState({\r\n                    createErrMsg: [err.msg || err.message || err || 'Unknown error']\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n}","import React from \"react\";\r\nimport {TABS} from \"../index\";\r\n\r\nexport class BottomMenu extends React.Component {\r\n\r\n    render() {\r\n        const {onTabSet, onLeave} = this.props;\r\n        return <div className=\"ui three buttons room-menu\">\r\n            <button className={`ui button ${this.btnClass(TABS.MEMBERS)}`} onClick={()=>onTabSet(TABS.MEMBERS)}><i className=\"eye slash icon\"/></button>\r\n            <button className={`ui button ${this.btnClass(TABS.BOARD)}`} onClick={()=>onTabSet(TABS.BOARD)}><i className=\"icon users\"/> </button>\r\n            <button className={`ui button ${this.btnClass(TABS.HISTORY)}`} onClick={()=>onTabSet(TABS.HISTORY)}><i className=\"stack exchange icon\"/></button>\r\n        </div>\r\n    }\r\n\r\n    btnClass(menuTab) {\r\n        const tab = this.props.tab;\r\n        return tab === menuTab ? 'secondary': ''\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {STATUS} from \"../../../api/enum\";\r\nimport {Button, Icon, Image, List} from \"semantic-ui-react\";\r\nimport {getRoleVision, ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nexport class MembersList extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, onLeave} = this.props;\r\n        const {members, status, type} = room;\r\n        const userRole = user.role && roleTraits[user.role];\r\n        const userTeam = userRole && teamTraits[userRole.side];\r\n        return <div>\r\n            <h2 className=\"ui center aligned header\">Roles</h2>\r\n            {userRole && <div className=\"ui fluid card\">\r\n                <div className=\"content\">\r\n                    <img className=\"right floated tiny ui image\" src={userRole.icon} alt={userRole.title}/>\r\n                    <div className={`header ${userTeam.color}`} >\r\n                        {userRole.title}\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        {userTeam.title}\r\n                    </div>\r\n                    <p/>\r\n                    {userRole.info && <p>{userRole.info}</p>}\r\n                    <p>\r\n                        Win conditions:\r\n                        <ul>\r\n                            {userTeam.success && userTeam.success.map(t => <li className=\"text success\" key={t}>{t}</li>)}\r\n                            {userRole.fail && userRole.fail.map(t => <li className=\"text danger\" key={t}>{t}</li>)}\r\n                        </ul>\r\n                    </p>\r\n                </div>\r\n            </div>}\r\n            <List verticalAlign='middle' size='huge' celled>\r\n                {members.map(m => {\r\n                    const role = getVision(status, user, m);\r\n                    return <List.Item key={m.login}>\r\n                    <Image avatar src={roleTraits[role].icon}/>\r\n                    <List.Content>\r\n                        <List.Header>{m.login}</List.Header>\r\n                        {status !== STATUS.NEW && <List.Description>\r\n                            {roleTraits[role].title}\r\n                        </List.Description>}\r\n                    </List.Content>\r\n                    {user.host && <List.Content floated='right'>\r\n                        <Button icon onClick={() => this.kick(m.login)} color='red'>\r\n                            <Icon name='thumbs down'/>\r\n                        </Button>\r\n                    </List.Content>}\r\n                </List.Item>})}\r\n            </List>\r\n            <button className=\"ui fluid negative button\" onClick={onLeave}>Leave</button>\r\n        </div>\r\n    }\r\n\r\n\r\n    kick(login){\r\n        const {roomId, api} = this.props;\r\n        api.kick(login, roomId);\r\n    }\r\n\r\n}\r\n\r\nfunction getVision(status, user, member) {\r\n    switch (status) {\r\n        case STATUS.FINISHED: return member.role;\r\n        case STATUS.STARTED: return user.login === member.login ? member.role : getRoleVision(user.role, member.originalRole);\r\n        default: return ROLES.UNKNOWN;\r\n    }\r\n}","import React from \"react\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nconst options = Object.values(roleTraits).filter(r => !r.base && r.side);\r\n\r\nexport class RoleCustomizeForm extends React.Component{\r\n\r\n    render() {\r\n        const {room, api, roomId, user} = this.props;\r\n        const {members, roles = []} = room;\r\n\r\n\r\n        return <React.Fragment>\r\n                <div className=\"ui large message\">\r\n                    <div className=\"content\">\r\n                        <p>Waiting for other players to join</p>\r\n                        <p><a className=\"roomLink\" href={`#${roomId}`}>ROOM LINK</a></p>\r\n                    </div>\r\n                </div>\r\n                <p><b>People in this room ({members.length}):</b> {members.map(m=>m.login).join(\", \")}</p>\r\n            <p><b>Possible roles:</b> {[ROLES.RESISTANCE, ROLES.SPY, ...roles]\r\n                .map((r,i) => [\r\n                    i>0 &&\", \",\r\n                    <span key={i} className={teamTraits[roleTraits[r].side].color}>{roleTraits[r].title}</span>])}\r\n                </p>\r\n            {user.host && <div className=\"ui form\">\r\n                    {   options.map(r =>\r\n                            <div className=\"field\" key={r.id}>\r\n                                <div className=\"ui checkbox\" onClick={()=>{this.toggleRole(r.id)}}>\r\n                                    <input type=\"checkbox\" className=\"hidden\" checked={roles.includes(r.id)} value={r.id} onChange={()=>{}}/>\r\n                                    <label>{r.title}</label>\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    <button className=\"ui fluid positive button\" onClick={()=>{this.start()}}>Start</button>\r\n                </div>}\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n    toggleRole(role) {\r\n        const {room:{roles = []}, api, roomId} = this.props;\r\n        if(roles.includes(role)){\r\n            api.setRoles(roomId, roles.filter(r => r!==role));\r\n        }else{\r\n            api.setRoles(roomId, [...roles, role]);\r\n        }\r\n    }\r\n\r\n    start(){\r\n        const {room:{members}, api, roomId} = this.props;\r\n        if(members.length>=5){\r\n            api.start(roomId);\r\n        }\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\nimport {participantsCount} from \"../../../../domain/missions\";\r\n\r\nexport class ParticipantsForm extends React.Component{\r\n\r\n    render() {\r\n        const {room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        console.log(mission);\r\n        const numParticipants = participantsCount[room.members.length][mission.num];\r\n\r\n        return <div className=\"ui form\">\r\n            <h4 className=\"ui dividing header\">You are the Leader. Choose {numParticipants} operatives for this mission</h4>\r\n            {   members.map((m,mid) =>\r\n                <div className=\"field\" key={m.login}>\r\n                    <div className=\"ui checkbox\" onClick={()=>{this.toggleParticipant(mid)}}>\r\n                        <input type=\"checkbox\" className=\"hidden\" checked={mission.participants.includes(mid)} value={mid} onChange={()=>{}}/>\r\n                        <label>{m.login}</label>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            {mission.participants.length === numParticipants && <button className=\"ui positive fluid button\" onClick={() => this.propose()}>Propose team</button>}\r\n        </div>\r\n    }\r\n\r\n    toggleParticipant(mid) {\r\n        const {roomId, api, room} = this.props;\r\n        api.updateCurrentMission(roomId, mission => {\r\n            const participants = mission.participants;\r\n            const numParticipants = participantsCount[room.members.length][mission.num];\r\n            if(participants.includes(mid)){\r\n                return {...mission, participants: participants.filter(id => id!==mid)};\r\n            }else if(participants.length<numParticipants){\r\n                return {...mission, participants: [...participants, mid]};\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n\r\n    propose(){\r\n        const {roomId, api, room} = this.props;\r\n        api.updateCurrentMission(roomId, mission => {\r\n            const numParticipants = participantsCount[room.members.length][mission.num];\r\n            if(numParticipants === mission.participants.length){\r\n                return {...mission, status: OP_STATUS.VOTE}\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\n\r\nexport class MissionStatus extends React.Component{\r\n\r\n    render() {\r\n        const {room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n\r\n        return <React.Fragment>\r\n            {mission.status === OP_STATUS.PREPARE && <div className=\"ui yellow message\">\r\n                <div className=\"header\">Waiting for the Leader to propose a team</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.VOTE && <div className=\"ui blue message\">\r\n                <div className=\"header\">Approve or reject this team</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.PROGRESS && <div className=\"ui blue message\">\r\n                <div className=\"header\">Mission is in progress</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.REJECTED && <div className=\"ui message\">\r\n                <div className=\"header\">The team was rejected by the majority</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.FAIL && <div className=\"ui red message\">\r\n                <div className=\"header\">The team has failed your expectations</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.SUCCESS && <div className=\"ui green message\">\r\n                <div className=\"header\">The team was successful</div>\r\n            </div>}\r\n        </React.Fragment>\r\n\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport {getRoleVision, roleTraits} from \"../../../../domain/roles\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\nimport {MissionStatus} from \"../MissionStatus\";\r\n\r\n\r\nexport class ParticipantsStage extends React.Component {\r\n\r\n    render() {\r\n        const {user, room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const leader = members[mission.leader];\r\n        const leaderVision = leader.login === user.login ? user.role : getRoleVision(user.role, leader.role);\r\n        return <React.Fragment>\r\n            <MissionStatus room={room}/>\r\n            <h3 className=\"ui header\">\r\n                <img className=\"ui avatar image\" src={roleTraits[leaderVision].icon}/>\r\n                <div className=\"content\">\r\n                    Leader {leader.login}\r\n                    {roleTraits[leaderVision].title && <div className=\"sub header\">{roleTraits[leaderVision].title}</div>}\r\n                </div>\r\n            </h3>\r\n            <div className=\"content\">Proposed operatives:</div>\r\n            <div className=\"ui list\">\r\n                {mission.participants.map(mid => {\r\n                    const participant = members[mid];\r\n                    const vision = participant.login === user.login ? user.role : getRoleVision(user.role, participant.role);\r\n                    return <div className=\"item\" key={mid}>\r\n                        <img className=\"ui avatar image\" src={roleTraits[vision].icon}/>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">{participant.login}</div>\r\n                            <div className=\"description\">{roleTraits[vision].title}</div>\r\n                        </div>\r\n                    </div>})}\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS, VOTE} from \"../../../../api/enum\";\r\n\r\nexport class VoteForm extends React.Component{\r\n\r\n    render() {\r\n        const {user, room, api, roomId, mission} = this.props;\r\n        const {vote = {}} = mission;\r\n        const curVote = vote[room.members.findIndex(m => m.login === user.login)];\r\n\r\n        return curVote ?\r\n            (curVote === VOTE.YES ?\r\n                <div className=\"ui green message\"><div className=\"header\">You approved the mission. Waiting for other player to vote</div></div> :\r\n                <div className=\"ui red message\"><div className=\"header\">You rejected the mission. Waiting for other player to vote</div></div>) :\r\n            <div className=\"ui fluid buttons\">\r\n                <button className=\"ui red button\" onClick={()=>this.vote(VOTE.NO)}>\r\n                    <i className=\"thumbs down icon\"/>\r\n                    Reject\r\n                </button>\r\n                <button className=\"ui green button\" onClick={()=>this.vote(VOTE.YES)}>\r\n                    <i className=\"thumbs up icon\"/>\r\n                    Approve\r\n                </button>\r\n            </div>\r\n    }\r\n\r\n\r\n    vote(resolution){\r\n        const {roomId, api, room, user} = this.props;\r\n        const userNum = room.members.findIndex(m => m.login === user.login);\r\n        api.updateCurrentMission(roomId, mission => {\r\n            if(!mission.vote || !mission.vote[userNum]){\r\n                const vote = mission.vote ? {...mission.vote}: {};\r\n                vote[userNum] = resolution;\r\n                const result = Object.values(vote).reduce((r, vote) => ({...r, [vote]: 1 + r[vote]}), {[VOTE.YES]: 0, [VOTE.NO]:0});\r\n                if(result[VOTE.YES] + result[VOTE.NO] === room.members.length){\r\n                    return {...mission, status: result[VOTE.YES] > result[VOTE.NO] ? OP_STATUS.PROGRESS: OP_STATUS.REJECTED, vote}\r\n                }else{\r\n                    return {...mission, vote}\r\n                }\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../../domain/roles\";\r\n\r\nexport class DefectorMessage extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, mission} = this.props;\r\n\r\n        if((user.role === ROLES.DEFECTOR || user.role === ROLES.SPY_DEFECTOR) && room.defectorTurn.includes(mission.num)){\r\n            const role = user.role === ROLES.DEFECTOR ? roleTraits[ROLES.SPY_DEFECTOR] : roleTraits[ROLES.DEFECTOR];\r\n            return <div className=\"ui fluid card\">\r\n                <div className=\"content\">\r\n                        <img className=\"right floated small ui image\" src={role.icon}/>\r\n                        <div className=\"header\">\r\n                            Your allegiance has changed\r\n                        </div>\r\n                        <div className=\"meta\">\r\n                            Defector action\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            From the next turn you are sided with <b className={teamTraits[role.side].color}>{teamTraits[role.side].title}</b>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {VOTE} from \"../../../api/enum\";\r\n\r\nexport class VotesList extends React.Component {\r\n\r\n    render() {\r\n        const {room, mission} = this.props;\r\n\r\n        return <div className=\"ui  divided list\">\r\n            {room.members.map((m,id) => <div className=\"item\" key={m.login}>\r\n                <div className=\"right floated content\">\r\n                    {mission.vote[id] === VOTE.YES ? <i className=\"thumbs up icon success text\"/> :\r\n                        <i className=\"thumbs down icon danger text\"/>}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {m.login}\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../api/enum\";\r\nimport {ParticipantsForm} from \"./ParticipantsForm\";\r\nimport {ParticipantsStage} from \"./ParticipantsStage\";\r\nimport {VoteForm} from \"./VoteForm\";\r\nimport {DefectorMessage} from \"./DefectorMessage\";\r\nimport {VotesList} from \"../VotesList\";\r\n\r\nexport class PlaySession extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, api, roomId} = this.props;\r\n        console.log(room);\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const leader = members[mission.leader];\r\n        const showParticipantsForm = mission.status === OP_STATUS.PREPARE && leader.login === user.login;\r\n\r\n        return <React.Fragment>\r\n            <h3 className=\"ui center aligned header\">Mission {mission.num+1}</h3>\r\n            {showParticipantsForm && <ParticipantsForm room={room} api={api} roomId={roomId}/>}\r\n            {!showParticipantsForm && <ParticipantsStage room={room} api={api} roomId={roomId} user={user}/>}\r\n            {mission.status === OP_STATUS.VOTE && <VoteForm room={room} user={user} api={api} mission={mission} roomId={roomId}/>}\r\n            {mission.status === OP_STATUS.PROGRESS && user.host && <div className=\"ui fluid buttons\">\r\n                <button className=\"ui red button\" onClick={()=>this.setMissionResult(OP_STATUS.FAIL)}>Mission fail</button>\r\n                <button className=\"ui green button\" onClick={()=>this.setMissionResult(OP_STATUS.SUCCESS)}>Mission success</button>\r\n            </div>}\r\n            { (mission.status === OP_STATUS.PROGRESS || OP_STATUS.isTerminal(mission.status)) && <VotesList room={room} mission={mission}/> }\r\n            <DefectorMessage user={user} room={room} mission={mission}/>\r\n            {OP_STATUS.isTerminal(mission.status) && user.host &&\r\n            <button className=\"ui fluid primary button\" onClick={()=>this.nextMission()}>Next mission</button>}\r\n        </React.Fragment>\r\n    }\r\n\r\n    setMissionResult(result) {\r\n        const {roomId, api} = this.props;\r\n        api.updateCurrentMission(roomId, mission => {\r\n            if(mission.status === OP_STATUS.PROGRESS){\r\n                return {...mission, status: result};\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n\r\n    nextMission() {\r\n        const {roomId, api} = this.props;\r\n        api.nextMission(roomId);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {TEAM} from \"../../../api/enum\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nexport class ScoreBoard extends React.Component{\r\n\r\n    render() {\r\n        const {room:{score}} = this.props;\r\n\r\n        if(score[TEAM.BAD] > score[TEAM.GOOD]) {\r\n            return <React.Fragment>\r\n                    <img className=\"ui medium circular image centered\" src={roleTraits[ROLES.SPY].icon}/>\r\n                    <h2 className={`ui center aligned header ${teamTraits[TEAM.BAD].color}`}>The Spies Won</h2>\r\n            </React.Fragment>\r\n        }else{\r\n            return <React.Fragment>\r\n                <img className=\"ui medium circular image centered\" src={roleTraits[ROLES.RESISTANCE].icon}/>\r\n                <h2 className={`ui center aligned header ${teamTraits[TEAM.GOOD].color}`}>The Resistance Won</h2>\r\n            </React.Fragment>\r\n        }\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {STATUS} from \"../../../api/enum\";\r\nimport {RoleCustomizeForm} from \"../RoleCustomizeForm\";\r\nimport {PlaySession} from \"../PlaySession\";\r\nimport {ScoreBoard} from \"../ScoreBoard\";\r\n\r\nexport class Board  extends React.Component{\r\n\r\n    render(){\r\n        const {room, api, roomId, user} = this.props;\r\n        const {status} = room;\r\n\r\n        return <React.Fragment>\r\n            {status === STATUS.NEW && <RoleCustomizeForm room={room} api={api} roomId={roomId} user={user}/>}\r\n            {status === STATUS.STARTED && <PlaySession room={room} api={api} roomId={roomId} user={user}/>}\r\n            {status === STATUS.FINISHED && <ScoreBoard room={room}/>}\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Header} from \"semantic-ui-react\";\r\n\r\nimport {gameApi} from \"../../api/game\";\r\nimport {STATUS} from \"../../api/enum\";\r\nimport {BottomMenu} from \"./BottomMenu\";\r\nimport {MembersList} from \"./MembersList\";\r\nimport './index.css';\r\nimport {Board} from \"./Board\";\r\n\r\nexport const TABS = {\r\n    BOARD: 'BOARD',\r\n    MEMBERS: 'MEMBERS',\r\n    HISTORY: 'HISTORY'\r\n};\r\n\r\nexport class Room extends React.Component {\r\n\r\n    state = {\r\n        room: null,\r\n        errMsg: null,\r\n        tab: TABS.BOARD\r\n    };\r\n\r\n    removeListener = null;\r\n\r\n    render() {\r\n        const {login, roomId} = this.props;\r\n        const {room, errMsg, tab} = this.state;\r\n        const user = room && room.members.find(u => u.login === login);\r\n        return user && room ?\r\n                <div className=\"room\">\r\n                    {errMsg && <div className=\"ui negative message room-msg\">\r\n                        <div className=\"header\">Something went wrong</div>\r\n                        <p>{errMsg}</p>\r\n                    </div>}\r\n                    <div className=\"room-content\">\r\n                        {tab === TABS.MEMBERS &&\r\n                            <MembersList room={room} user={user} api={gameApi} roomId={roomId} onLeave={() => this.leave()}/>\r\n                        }\r\n                        {tab === TABS.BOARD && <Board room={room} user={user} roomId={roomId} api={gameApi}/>}\r\n                    </div>\r\n                    <BottomMenu onTabSet={(tab)=>this.setState({tab})} tab={tab}/>\r\n                </div>\r\n             : <Header centered=\"true\" as='h5'>Searching for a room</Header>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {roomId} = this.props;\r\n        this.removeListener = gameApi.listenRoom(roomId, (room) => {\r\n            this.setState({\r\n                room: room.data()\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(this.removeListener){\r\n            this.removeListener();\r\n            this.removeListener = null;\r\n        }\r\n    }\r\n\r\n    start = () => {\r\n        this.clearErr();\r\n        const {room} = this.state;\r\n        const {roomId} = this.props;\r\n        if(room.status === STATUS.NEW && room.members.length >= 1 && room.members.length < 10){\r\n            gameApi.start(roomId).catch(err => {\r\n                this.setState({\r\n                    errMsg: err.message || 'Unknown error'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    end = () => {\r\n        this.clearErr();\r\n        const {roomId} = this.props;\r\n        gameApi.end(roomId).catch(err => {\r\n            this.setState({\r\n                errMsg: err.message || 'Unknown error'\r\n            })\r\n        });\r\n    };\r\n\r\n    clearErr = () => {\r\n        this.setState({\r\n            errMsg: null\r\n        })\r\n    };\r\n\r\n    leave(){\r\n        const {onLeave} = this.props;\r\n        console.log('leave');\r\n        onLeave && onLeave();\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nfunction setCred(cred){\r\n    localStorage.setItem('cred', JSON.stringify(cred));\r\n}\r\n\r\nfunction clearCred() {\r\n    localStorage.removeItem('cred');\r\n}\r\n\r\nfunction getCred() {\r\n    const str = localStorage.getItem('cred');\r\n    return str ? JSON.parse(str) : null;\r\n}\r\n\r\nexport const credApi = {setCred, getCred, clearCred};","import React from \"react\";\r\nimport {Enter} from \"../Enter\";\r\nimport {Room} from \"../Room\";\r\nimport {gameApi} from \"../../api/game\";\r\nimport {credApi} from \"../../api/store\";\r\n\r\nexport class App extends React.Component {\r\n\r\n    state = {\r\n        roomId: null,\r\n        login: null,\r\n        secret: null,\r\n        ready: false\r\n    };\r\n\r\n    render() {\r\n        const {roomId, login, secret} = this.state;\r\n\r\n        return <React.Fragment>\r\n                    {!roomId && <Enter onEnter={this.onEnter}/>}\r\n                    {roomId && <Room roomId={roomId} login={login} secret={secret} onLeave={this.onLeave}/>}\r\n            </React.Fragment>\r\n    }\r\n\r\n    onEnter = (cred) => {\r\n        credApi.setCred(cred);\r\n        this.setState({\r\n            ...cred\r\n        })\r\n    };\r\n\r\n    onLeave = () => {\r\n        credApi.clearCred();\r\n        window.location = '/';\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.tryLogin();\r\n    }\r\n\r\n    tryLogin = () => {\r\n        const id = window.location.hash.slice(1);\r\n        const cred = credApi.getCred();\r\n        if(cred && (!id || cred.roomId === id)){\r\n            gameApi.login(cred).then(() => {\r\n                this.setState({\r\n                    ...cred\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/secret-agent.f4720874.svg\";"],"sourceRoot":""}