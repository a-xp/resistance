{"version":3,"sources":["domain/icons/secret-agent.svg","domain/icons/soldier.svg","domain/icons/anonymous.svg","domain/icons/captain.svg","domain/icons/captain-red.svg","domain/icons/ninja.svg","domain/icons/bodyguard.svg","cred.js","firebase.js","api/enum.js","domain/roles.js","domain/bots.js","domain/missions.js","api/game.js","components/Enter/index.js","components/Room/BottomMenu/index.js","components/Room/MembersList/index.js","components/Room/PlaySession/RoleCustomizeForm/index.js","components/Room/PlaySession/ParticipantsForm/index.js","components/Room/PlaySession/MissionStatus/index.js","components/Room/PlaySession/ParticipantsStage/index.js","components/Room/PlaySession/VoteForm/index.js","components/Room/PlaySession/DefectorMessage/index.js","components/Room/PlaySession/VotesList/index.js","components/Room/PlaySession/index.js","components/Room/ScoreBoard/index.js","components/Room/Board/index.js","components/Room/index.js","api/store.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","firebaseCred","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","db","firestore","STATUS","NEW","STARTED","FINISHED","TEAM","BAD","GOOD","RANDOM","GAME_TYPE","CLASSIC","AVALON","OP_STATUS","PREPARE","VOTE","PROGRESS","REJECTED","SUCCESS","FAIL","isTerminal","status","YES","NO","ROLES","RESISTANCE","SPY","BODY_GUARD","COMMANDER","FALSE_COMMANDER","ASSASSIN","UNKNOWN","SPY_DEFECTOR","DEFECTOR","DEEP_COVER_SPY","BLIND_SPY","roleTraits","_roleTraits","Object","defineProperty","id","side","title","icon","assassinIcon","core","falseCommanderIcon","info","spyIcon","base","commanderIcon","bodyGuardIcon","resistanceIcon","anonymousIcon","teamTraits","_teamTraits","color","success","fail","assignRoles","playersPrefSide","gameRoles","teams","_playersPrefSide$redu","_ref","reduce","result","i","objectSpread","concat","toConsumableArray","players","shuffle","slice","teamSize","length","splitTeams","Array","good","bad","filter","r","forEach","shift","array","j","Math","floor","random","_ref2","5","6","7","8","9","10","11","getRoleVision","ownRole","visionRole","getDefectorTurns","roles","ceil","makeDefectorSwap","members","map","m","role","bots","vote","mebers","votes","resolution","arguments","undefined","bot","createBot","login","Sentencer","make","toUpperCase","prefSide","doMission","proposeTeam","leader","missionNumber","participants","participantsCount","playerNum","push","getScore","missions","_missions$reduce","createMission","prev","lastId","numPlayers","num","name","calcVotesMajority","roomSize","_Object$values$reduce","summary","values","_callee","type","secret","ref","regenerator_default","a","wrap","_context","next","makeSecret","collection","add","host","sent","abrupt","roomId","stop","_callee3","roomRef","_context3","doc","runTransaction","asyncToGenerator","mark","_callee2","transaction","roomDoc","room","_context2","get","exists","Error","data","some","update","_x22","apply","this","_callee5","_context5","_callee4","_context4","_x23","_callee6","cred","_context6","find","Promise","reject","_callee8","_context8","_ref3","_callee7","_score","defectorTurn","newMembers","mission","newRoom","_context7","team","originalRole","score","_x24","_callee10","_context10","_ref4","_callee9","_context9","_x25","_callee12","_context12","_ref5","_callee11","kicked","_context11","_x26","_callee14","_context14","_ref6","_callee13","_context13","_x27","updateCurrentMission","_callee16","mutator","_context16","_ref7","_callee15","_context15","_x28","_callee17","_context17","_callee18","_context18","newVote","toString","replace","_callee20","_context20","_ref8","_callee19","lastMission","_context19","includes","_x29","gameApi","create","join","listenRoom","cb","onSnapshot","start","end","kick","setRoles","nextMission","addBot","voteTeam","Enter","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","state","joinErrMsg","createErrMsg","window","location","hash","form","React","createRef","joinPane","react_default","createElement","Tab","Pane","Form","Message","negative","Header","Field","label","control","defaultValue","Group","grouped","value","defaultChecked","Button","primary","fluid","onClick","onJoin","createPane","onCreate","onEnter","props","serialize","ReactDOM","current","then","err","setState","msg","message","game","inherits","createClass","key","panes","menuItem","render","Component","BottomMenu","_this$props","onTabSet","onLeave","className","btnClass","TABS","MEMBERS","BOARD","HISTORY","menuTab","tab","MembersList","user","userRole","userTeam","Fragment","src","alt","t","List","verticalAlign","size","celled","member","getVision","Item","Image","avatar","Content","Description","floated","Icon","setVision","_this$props2","api","_this$props3","options","RoleCustomizeForm","_room$roles","href","toggleRole","checked","onChange","_this$props2$room$rol","ParticipantsForm","missionNum","console","log","numParticipants","mid","toggleParticipant","propose","MissionStatus","ParticipantsStage","leaderVision","MissionStatus_MissionStatus","participant","vision","VoteForm","_mission$vote","curVote","findIndex","userNum","DefectorMessage","VotesList","PlaySession","showParticipantsForm","ParticipantsForm_ParticipantsForm","ParticipantsStage_ParticipantsStage","DefectorMessage_DefectorMessage","VoteForm_VoteForm","setMissionResult","VotesList_VotesList","ScoreBoard","Board","RoleCustomizeForm_RoleCustomizeForm","PlaySession_PlaySession","ScoreBoard_ScoreBoard","Room","errMsg","removeListener","clearErr","catch","_this2","_this$state","u","MembersList_MembersList","leave","Board_Board","BottomMenu_BottomMenu","centered","as","_this3","credApi","setCred","localStorage","setItem","JSON","stringify","getCred","str","getItem","parse","clearCred","removeItem","App","ready","tryLogin","path","pathname","split","Boolean","e","error","Enter_Enter","Room_Room","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8b67d697.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/secret-agent.f4720874.svg\";","module.exports = __webpack_public_path__ + \"static/media/soldier.1cc063fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymous.6898e435.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain.fc758069.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain-red.09706776.svg\";","module.exports = __webpack_public_path__ + \"static/media/ninja.9ff8d9ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/bodyguard.fb712ee8.svg\";","\r\nconst firebaseCred = {\r\n    apiKey: \"AIzaSyCVuB9PRtMCoDcYNR70NWWtTuJu3GU0FKM\",\r\n    authDomain: \"random-role.firebaseapp.com\",\r\n    databaseURL: \"https://random-role.firebaseio.com\",\r\n    projectId: \"random-role\",\r\n    storageBucket: \"random-role.appspot.com\",\r\n    messagingSenderId: \"71043698352\"\r\n};\r\n\r\nexport default firebaseCred;","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport firebaseCred from \"./cred\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: firebaseCred.apiKey,\r\n    authDomain: firebaseCred.authDomain,\r\n    projectId: firebaseCred.projectId\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","export const STATUS = {\r\n  NEW: 'NEW',\r\n  STARTED: 'STARTED',\r\n  FINISHED: 'FINISHED'\r\n};\r\n\r\nexport const TEAM = {\r\n  BAD: 'BAD',\r\n  GOOD: 'GOOD',\r\n  RANDOM: 'RANDOM'\r\n};\r\n\r\nexport const GAME_TYPE = {\r\n  CLASSIC: 'CLASSIC',\r\n  AVALON: 'AVALON'\r\n};\r\n\r\nexport const OP_STATUS = {\r\n  PREPARE: 'PREPARE',\r\n  VOTE: 'VOTE',\r\n  PROGRESS: 'PROGRESS',\r\n  REJECTED: 'REJECTED',\r\n  SUCCESS: 'SUCCESS',\r\n  FAIL: 'FAIL',\r\n    isTerminal(status) {\r\n      return status === OP_STATUS.REJECTED || status === OP_STATUS.SUCCESS || status === OP_STATUS.FAIL;\r\n    }\r\n};\r\n\r\nexport const VOTE = {\r\n  YES: 'YES',\r\n  NO: 'NO'\r\n};","import {TEAM} from \"../api/enum\";\r\nimport resistanceIcon from './icons/soldier.svg';\r\nimport spyIcon from './icons/secret-agent.svg';\r\nimport anonymousIcon from './icons/anonymous.svg';\r\nimport commanderIcon from './icons/captain.svg';\r\nimport falseCommanderIcon from './icons/captain-red.svg';\r\nimport assassinIcon from  './icons/ninja.svg';\r\nimport bodyGuardIcon from './icons/bodyguard.svg';\r\n\r\nexport const ROLES = {\r\n    RESISTANCE: 'RESISTANCE',\r\n    SPY: 'SPY',\r\n    BODY_GUARD: 'BODY_GUARD',\r\n    COMMANDER: 'COMMANDER',\r\n    FALSE_COMMANDER: 'FALSE_COMMANDER',\r\n    ASSASSIN: 'ASSASSIN',\r\n    UNKNOWN: 'UNKNOWN',\r\n    SPY_DEFECTOR: 'SPY_DEFECTOR',\r\n    DEFECTOR: 'DEFECTOR',\r\n    DEEP_COVER_SPY: 'DEEP_COVER_SPY',\r\n    BLIND_SPY: 'BLIND_SPY'\r\n};\r\n\r\nexport const roleTraits = {\r\n    [ROLES.ASSASSIN]: {id: ROLES.ASSASSIN, side: TEAM.BAD, title: 'Assassin', icon: assassinIcon, core: true},\r\n    [ROLES.FALSE_COMMANDER]: {id: ROLES.FALSE_COMMANDER, side: TEAM.BAD, title: 'False Commander', icon: falseCommanderIcon, info: 'Appears as Commander'},\r\n    [ROLES.SPY]: {id: ROLES.SPY, side: TEAM.BAD, title: 'Government spy', icon: spyIcon, base: true},\r\n    [ROLES.COMMANDER]: {id: ROLES.COMMANDER, side: TEAM.GOOD, title: 'Commander', icon:commanderIcon, core: true, info: 'Knows spies'},\r\n    [ROLES.BODY_GUARD]: {id: ROLES.BODY_GUARD, side: TEAM.GOOD, title: 'Bodyguard', icon:bodyGuardIcon, info: 'Knows commanders'},\r\n    [ROLES.RESISTANCE]: {id: ROLES.RESISTANCE, side: TEAM.GOOD, title: 'Member of the Resistance', icon:resistanceIcon, base: true},\r\n    [ROLES.UNKNOWN]: {id: ROLES.UNKNOWN, icon: anonymousIcon},\r\n    [ROLES.SPY_DEFECTOR]: {id:ROLES.SPY_DEFECTOR, side:TEAM.BAD, title: 'Spy Defector', icon: spyIcon, info: 'Might switch side'},\r\n    [ROLES.DEFECTOR]: {id: ROLES.DEFECTOR, side: TEAM.GOOD, title: 'Defector', icon: resistanceIcon, info: 'Might switch side'},\r\n    [ROLES.DEEP_COVER_SPY]: {id: ROLES.DEEP_COVER_SPY, side: TEAM.BAD, title: 'Deep cover Spy', icon: spyIcon, info: 'Unknown to Commander'},\r\n    [ROLES.BLIND_SPY]: {id: ROLES.BLIND_SPY, side: TEAM.BAD, title: 'Blind Spy', icon: spyIcon, info: 'Unknown to other spies'}\r\n};\r\n\r\nexport const teamTraits = {\r\n  [TEAM.BAD]: {color: 'spy text', title: 'The Spies', success: ['3 Missions fail', 'Commander named by the Assassin']},\r\n  [TEAM.GOOD]: {color: 'resistance text', title: 'The Resistance', success: ['3 Missions are completed successfully'], fail: ['Commander named by the Spies']}\r\n};\r\n\r\nexport function assignRoles(playersPrefSide, gameRoles) {\r\n    const teams = splitTeams(playersPrefSide);\r\n    const result = Array(playersPrefSide.length);\r\n    const good = shuffle(teams[TEAM.GOOD]);\r\n    const bad = shuffle(teams[TEAM.BAD]);\r\n    [...gameRoles.filter(r => roleTraits[r].core), ...shuffle(gameRoles.filter(r => !roleTraits[r].core))].forEach(r => {\r\n        if(roleTraits[r].side === TEAM.GOOD && good.length){\r\n            result[good.shift()] = r;\r\n        }else if(roleTraits[r].side === TEAM.BAD && bad.length){\r\n            result[bad.shift()] = r;\r\n        }\r\n    });\r\n    while(good.length>0){\r\n        result[good.shift()] = ROLES.RESISTANCE;\r\n    }\r\n    while(bad.length>0){\r\n        result[bad.shift()] = ROLES.SPY;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction splitTeams(playersPrefSide) {\r\n    const teams = playersPrefSide.reduce( (result, side, i) => ({...result, [side]: [...result[side], i]}), {\r\n        [TEAM.BAD]: [],\r\n        [TEAM.GOOD]: [],\r\n        [TEAM.RANDOM]: []\r\n    });\r\n    const players = [...shuffle(teams[TEAM.GOOD]), ...shuffle(teams[TEAM.RANDOM]), ...shuffle(teams[TEAM.BAD])];\r\n    return {\r\n        [TEAM.BAD]: players.slice(teamSize[players.length]),\r\n        [TEAM.GOOD]: players.slice(0, teamSize[players.length])\r\n    }\r\n}\r\n\r\n\r\nfunction shuffle(array) {\r\n    const result = array.slice();\r\n    for (let i = result.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [result[i], result[j]] = [result[j], result[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nconst teamSize = {\r\n    5: 3, 6: 4, 7: 4, 8: 5, 9: 6, 10: 6, 11: 7\r\n};\r\n\r\nexport function getRoleVision(ownRole, visionRole) {\r\n    switch (ownRole) {\r\n        case ROLES.SPY:\r\n        case ROLES.FALSE_COMMANDER:\r\n        case ROLES.ASSASSIN:\r\n        case ROLES.DEEP_COVER_SPY:\r\n            return roleTraits[visionRole].side === TEAM.GOOD ? ROLES.RESISTANCE : ROLES.SPY;\r\n        case ROLES.BODY_GUARD: return visionRole === ROLES.COMMANDER || visionRole === ROLES.FALSE_COMMANDER ? ROLES.COMMANDER : ROLES.UNKNOWN;\r\n        case ROLES.COMMANDER:\r\n            if(visionRole === ROLES.DEEP_COVER_SPY) return ROLES.RESISTANCE;\r\n            return roleTraits[visionRole].side === TEAM.GOOD ? ROLES.RESISTANCE : ROLES.SPY;\r\n        default: return ROLES.UNKNOWN;\r\n    }\r\n}\r\n\r\nexport function getDefectorTurns(roles){\r\n    return roles.filter(r => r===ROLES.SPY_DEFECTOR || r===ROLES.DEFECTOR).length === 2 ? [\r\n        Math.ceil(Math.random()*7), Math.ceil(Math.random()*7)\r\n    ] : [];\r\n}\r\n\r\nexport function makeDefectorSwap(members){\r\n    return members.map(m => {\r\n        if(m.role === ROLES.DEFECTOR) return {...m, role: ROLES.SPY_DEFECTOR};\r\n        if(m.role === ROLES.SPY_DEFECTOR) return {...m, role: ROLES.DEFECTOR};\r\n        return m;\r\n    })\r\n}","import Sentencer from 'sentencer';\r\nimport {TEAM, VOTE} from \"../api/enum\";\r\nimport {participantsCount} from \"./missions\";\r\n\r\nfunction vote(mebers, votes, resolution = VOTE.YES) {\r\n    const result = {...votes};\r\n    mebers.forEach( (m,i) => {\r\n        if(m.bot){\r\n            result[i] = resolution\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nfunction createBot() {\r\n    const login = Sentencer.make('{{adjective}} {{noun}}');\r\n    return {\r\n        login: login[0].toUpperCase()+login.slice(1),\r\n        prefSide: TEAM.RANDOM,\r\n        bot: true\r\n    }\r\n}\r\n\r\nfunction doMission(members, votes) {\r\n\r\n}\r\n\r\nfunction proposeTeam(members, leader, missionNumber) {\r\n    const participants = [];\r\n    for(let i = 0;i<participantsCount[members.length][missionNumber];i++){\r\n        let playerNum = leader + i;\r\n        if(playerNum>=members.length){\r\n            playerNum-=members.length;\r\n        }\r\n        participants.push(playerNum);\r\n    }\r\n    return participants;\r\n}\r\n\r\nexport const bots = {vote, createBot, doMission, proposeTeam};","import {OP_STATUS, TEAM, VOTE} from \"../api/enum\";\r\nimport {bots} from \"./bots\";\r\nimport Sentencer from \"sentencer\";\r\n\r\nexport const participantsCount = {\r\n    5:[2,3,2,3,3],\r\n    6:[2,3,4,3,4],\r\n    7:[2,3,3,4,4],\r\n    8:[3,4,4,5,5],\r\n    9:[3,4,4,5,5],\r\n    10:[3,4,4,5,5],\r\n    11:[3,4,4,6,5]\r\n};\r\n\r\nexport function getScore(missions) {\r\n    return missions.reduce((r, m) => {\r\n        if(m.status === OP_STATUS.FAIL) return {...r, [TEAM.BAD]: 1 + r[TEAM.BAD]};\r\n        if(m.status === OP_STATUS.SUCCESS) return {...r, [TEAM.GOOD]: 1 + r[TEAM.GOOD]};\r\n        return r;\r\n    }, {[TEAM.GOOD]: 0, [TEAM.BAD]: 0});\r\n}\r\n\r\nexport function getNextLeader(lastId, numPlayers) {\r\n    return lastId < numPlayers-1 ? lastId + 1 : 0;\r\n}\r\n\r\nexport function createMission(prev, members) {\r\n    const num = prev ? (prev.status === OP_STATUS.REJECTED ? prev.num : prev.num + 1) : 0;\r\n    const leader = prev ? getNextLeader(prev.leader, members.length) : Math.floor(Math.random() * members.length);\r\n    const participants = members[leader].bot ? bots.proposeTeam(members, leader, num) : [];\r\n    const status = members[leader].bot ? OP_STATUS.VOTE : OP_STATUS.PREPARE;\r\n\r\n    return {num, leader, participants, vote: [], status, name: Sentencer.make('{{adjective}} {{noun}}')};\r\n}\r\n\r\nexport function calcVotesMajority(votes, roomSize) {\r\n    const summary = Object.values(votes).reduce((r, vote) => ({...r, [vote]: 1 + r[vote]}), {[VOTE.YES]: 0, [VOTE.NO]:0});\r\n    if(summary[VOTE.YES] + summary[VOTE.NO] === roomSize) {\r\n        return summary[VOTE.YES] > summary[VOTE.NO] ? OP_STATUS.PROGRESS : OP_STATUS.REJECTED;\r\n    }else{\r\n        return false;\r\n    }\r\n}","import db from '../firebase';\r\nimport {OP_STATUS, STATUS, TEAM, VOTE} from \"./enum\";\r\nimport {assignRoles, getDefectorTurns, makeDefectorSwap, ROLES, roleTraits} from \"../domain/roles\";\r\nimport {calcVotesMajority, createMission, getNextLeader, getScore, participantsCount} from \"../domain/missions\";\r\nimport {bots} from \"../domain/bots\";\r\n\r\nasync function create(type, login, prefSide) {\r\n    const secret = makeSecret();\r\n    const ref = await db.collection('rooms').add(\r\n        {\r\n            members: [\r\n                {login, prefSide, host: true, secret}\r\n            ],\r\n            status: STATUS.NEW\r\n        }\r\n    );\r\n    return {\r\n        roomId: ref.id, secret, login\r\n    };\r\n}\r\n\r\nasync function join(id, login, prefSide) {\r\n    const roomRef = db.collection('rooms').doc(id);\r\n    const secret = makeSecret();\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        if(!roomDoc.exists){\r\n            throw new Error(\"Room not found\");\r\n        }\r\n        const room = roomDoc.data();\r\n        if(room.members.some(m => m.login === login)){\r\n            throw new Error(\"Login is in use\");\r\n        }\r\n        if(room.status !== STATUS.NEW){\r\n            throw new Error(\"The game has been started\");\r\n        }\r\n        transaction.update(roomRef, {...room, members: [...room.members, {login, prefSide, secret}]});\r\n    });\r\n    return {\r\n        roomId: id, login, secret\r\n    };\r\n}\r\n\r\nasync function addBot(roomId){\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.NEW && room.members.length < 11){\r\n            const bot = bots.createBot();\r\n            transaction.update(roomRef, {...room, members: [...room.members, bot]});\r\n        }\r\n    });\r\n}\r\n\r\nasync function login(cred) {\r\n    const {roomId, login, secret} = cred;\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    const room = await roomRef.get();\r\n    if(room.exists){\r\n        const user = room.get('members').find(m => m.login === login && m.secret === secret);\r\n        if(user){\r\n            return true;\r\n        }else{\r\n            return Promise.reject(Error('Invalid credentials'))\r\n        }\r\n    }else{\r\n        return Promise.reject(Error('Room not found'))\r\n    }\r\n}\r\n\r\nasync function start(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        const numPlayers = room.members.length;\r\n        if(numPlayers < 5 || numPlayers > 11){\r\n            throw new Error(\"Number of players should be between 5 and 11\");\r\n        }\r\n        if(room.status === STATUS.NEW){\r\n            const roles = assignRoles(room.members.map(m => m.prefSide), room.roles);\r\n            const defectorTurn = getDefectorTurns(roles);\r\n            const newMembers = room.members.map( (m,i) => ({...m, team: roleTraits[roles[i]].side, role: roles[i], originalRole: roles[i]}));\r\n            const mission = createMission(null, newMembers);\r\n            const newRoom = {...room, members: newMembers, status: STATUS.STARTED, missions:[mission],\r\n                defectorTurn, score:{[TEAM.BAD]:0, [TEAM.GOOD]:0}};\r\n            transaction.update(roomRef, newRoom);\r\n        }\r\n    });\r\n}\r\n\r\nasync function end(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        transaction.update(roomRef, {...room, status: STATUS.FINISHED});\r\n    })\r\n}\r\n\r\nasync function kick(login, roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.NEW) {\r\n            const kicked = room.members.find(m => m.login === login);\r\n            if(kicked){\r\n                const newMembers = room.members.filter( m => m.login !== login);\r\n                if(kicked.host && newMembers.length){\r\n                    newMembers[0].host = true;\r\n                }\r\n                transaction.update(roomRef, {...room, members: newMembers});\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nasync function setRoles(roomId, roles) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if (room.status === STATUS.NEW) {\r\n            transaction.update(roomRef, {...room, roles});\r\n        }\r\n    });\r\n}\r\n\r\nasync function updateCurrentMission(roomId, mutator) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if (room.status === STATUS.STARTED) {\r\n            const mission = mutator(room.missions[room.missions.length-1], room);\r\n            transaction.update(roomRef, {...room, missions: [...room.missions.slice(0, room.missions.length-1),\r\n                    mission]});\r\n        }\r\n    });\r\n}\r\n\r\nasync function proposeTeam(roomId) {\r\n    await updateCurrentMission(roomId, (mission, room) => {\r\n        const numParticipants = participantsCount[room.members.length][mission.num];\r\n        if(numParticipants === mission.participants.length){\r\n            return {...mission, status: OP_STATUS.VOTE}\r\n        }else{\r\n            return mission;\r\n        }\r\n    })\r\n}\r\n\r\nasync function voteTeam(roomId, playerNum, resolution) {\r\n    await updateCurrentMission(roomId, (mission, room) => {\r\n        if(!mission.vote[playerNum]){\r\n            let newVote = {...mission.vote, [playerNum]: resolution};\r\n            if(room.members[playerNum].host){\r\n                newVote = bots.vote(room.members, newVote, resolution);\r\n            }\r\n            const result = calcVotesMajority(newVote, room.members.length);\r\n            if(result){\r\n                return {...mission, status: result, vote: newVote}\r\n            }else{\r\n                return {...mission, vote: newVote}\r\n            }\r\n        }else{\r\n            return mission;\r\n        }\r\n    })\r\n}\r\n\r\nfunction makeSecret(){\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '');\r\n}\r\n\r\nfunction listenRoom(id, cb) {\r\n    return db.collection('rooms').doc(id).onSnapshot(cb);\r\n}\r\n\r\nasync function nextMission(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.STARTED) {\r\n            const lastMission = room.missions[room.missions.length-1];\r\n            const score = getScore(room.missions);\r\n            if(score[TEAM.GOOD]>=3 || score[TEAM.BAD]>=3){\r\n                transaction.update(roomRef, {...room, status: STATUS.FINISHED, score});\r\n                return;\r\n            }\r\n            let members = room.members;\r\n            if(lastMission.status !== OP_STATUS.REJECTED  && room.defectorTurn.includes(lastMission.num)){\r\n                members = makeDefectorSwap(members);\r\n            }\r\n            const mission = createMission(lastMission, members);\r\n            transaction.update(roomRef, {...room, score, members, missions: [...room.missions, mission]});\r\n        }\r\n    });\r\n}\r\n\r\nexport const gameApi = {create, join, listenRoom, login, start, end, kick, setRoles, updateCurrentMission, nextMission, addBot, proposeTeam, voteTeam};","import React from \"react\";\r\nimport {Button, Form, Message, Tab} from \"semantic-ui-react\";\r\nimport {gameApi} from \"../../api/game\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport serialize from 'form-serialize';\r\nimport {GAME_TYPE, TEAM} from \"../../api/enum\";\r\n\r\n\r\nexport class Enter extends React.Component {\r\n\r\n    state = {\r\n        joinErrMsg: [],\r\n        createErrMsg: []\r\n    };\r\n\r\n    roomId = window.location.hash.slice(1);\r\n    form = React.createRef();\r\n\r\n    render (){\r\n        return <Tab panes={[\r\n            {menuItem: 'JOIN', render: this.joinPane},\r\n            {menuItem: 'CREATE', render: this.createPane},\r\n        ]}/>\r\n    }\r\n\r\n    joinPane = () => {\r\n        const {joinErrMsg} = this.state;\r\n        return <Tab.Pane>\r\n            <Form ref={this.form}>\r\n                {joinErrMsg && joinErrMsg.length>0 &&\r\n                    <Message negative>\r\n                        <Message.Header>Failed to join the game</Message.Header>\r\n                        {joinErrMsg.map( m => <p>{m}</p>)}\r\n                    </Message>\r\n                }\r\n                <Form.Field label='Game ID' control='input' name=\"id\" defaultValue={this.roomId}/>\r\n                <Form.Field label='Your name' control='input' name=\"login\" type=\"text\"/>\r\n                <Form.Group grouped>\r\n                    <label>Choose your side</label>\r\n                    <Form.Field label='Resistance' control='input' type='radio' name='side' value={TEAM.GOOD}/>\r\n                    <Form.Field label='Spies' control='input' type='radio' name='side' value={TEAM.BAD}/>\r\n                    <Form.Field label='Whatever' control='input' type='radio' name='side' defaultChecked value={TEAM.RANDOM}/>\r\n                </Form.Group>\r\n                <Button primary fluid onClick={this.onJoin}>JOIN</Button>\r\n            </Form>\r\n        </Tab.Pane>\r\n    };\r\n\r\n    createPane = () => {\r\n        const {createErrMsg} = this.state;\r\n        return <Tab.Pane>\r\n            <Form ref={this.form}>\r\n                {createErrMsg && createErrMsg.length>0 &&\r\n                <Message negative>\r\n                    <Message.Header>Failed to join the game</Message.Header>\r\n                    {createErrMsg.map( m => <p>{m}</p>)}\r\n                </Message>\r\n                }\r\n                <Form.Group grouped>\r\n                    <label>Choose a game</label>\r\n                    <Form.Field label='Resistance: Hunter module' control='input' type='radio' name='game' value={GAME_TYPE.CLASSIC} defaultChecked/>\r\n                    <Form.Field label='Resistance: Assassin module' control='input' type='radio' name='game' value={GAME_TYPE.AVALON}/>\r\n                </Form.Group>\r\n                <Form.Field label='Your name' control='input' name='login'/>\r\n                <Form.Group grouped>\r\n                    <label>Choose your side</label>\r\n                    <Form.Field label='Resistance' control='input' type='radio' value={TEAM.GOOD} name='side'/>\r\n                    <Form.Field label='Spies' control='input' type='radio' value={TEAM.BAD} name='side'/>\r\n                    <Form.Field label='Whatever' control='input' type='radio' name='side' value={TEAM.RANDOM} defaultChecked/>\r\n                </Form.Group>\r\n                <Button primary fluid onClick={this.onCreate}>CREATE</Button>\r\n            </Form>\r\n        </Tab.Pane>\r\n    };\r\n\r\n    onJoin = () => {\r\n        const {onEnter} = this.props;\r\n        const value = serialize(ReactDOM.findDOMNode(this.form.current), {hash: true});\r\n        if(value.login && value.id && value.side){\r\n            gameApi.join(value.id, value.login, value.side).then(cred => {\r\n                onEnter && onEnter(cred);\r\n            }, err => {\r\n                this.setState({\r\n                    joinErrMsg: [err.msg || err.message || err || 'Unknown error']\r\n                })\r\n            })\r\n        }\r\n    };\r\n\r\n    onCreate = () => {\r\n        const value = serialize(ReactDOM.findDOMNode(this.form.current), {hash: true});\r\n        const {onEnter} = this.props;\r\n        if(value.side && value.login && value.game){\r\n            gameApi.create(value.game, value.login, value.side).then(cred => {\r\n                onEnter && onEnter(cred)\r\n            }, err => {\r\n                this.setState({\r\n                    createErrMsg: [err.msg || err.message || err || 'Unknown error']\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n}","import React from \"react\";\r\nimport {TABS} from \"../index\";\r\n\r\nexport class BottomMenu extends React.Component {\r\n\r\n    render() {\r\n        const {onTabSet, onLeave} = this.props;\r\n        return <div className=\"ui three buttons room-menu\">\r\n            <button className={`ui button ${this.btnClass(TABS.MEMBERS)}`} onClick={()=>onTabSet(TABS.MEMBERS)}><i className=\"eye slash icon\"/></button>\r\n            <button className={`ui button ${this.btnClass(TABS.BOARD)}`} onClick={()=>onTabSet(TABS.BOARD)}><i className=\"icon users\"/> </button>\r\n            <button className={`ui button ${this.btnClass(TABS.HISTORY)}`} onClick={()=>onTabSet(TABS.HISTORY)}><i className=\"stack exchange icon\"/></button>\r\n        </div>\r\n    }\r\n\r\n    btnClass(menuTab) {\r\n        const tab = this.props.tab;\r\n        return tab === menuTab ? 'secondary': ''\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {STATUS} from \"../../../api/enum\";\r\nimport {Button, Icon, Image, List} from \"semantic-ui-react\";\r\nimport {getRoleVision, ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nexport class MembersList extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, onLeave} = this.props;\r\n        const {members, status} = room;\r\n        const userRole = user.role && roleTraits[user.role];\r\n        const userTeam = userRole && teamTraits[userRole.side];\r\n        return <React.Fragment>\r\n            {userRole && <div className=\"ui fluid card\">\r\n                <div className=\"content\">\r\n                    <img className=\"right floated tiny ui image\" src={userRole.icon} alt={userRole.title}/>\r\n                    <div className={`header ${userTeam.color}`} >\r\n                        {userRole.title}\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        Allegiance: {userTeam.title}\r\n                    </div>\r\n                    <p/>\r\n                    {userRole.info && <p>{userRole.info}</p>}\r\n                    <div>\r\n                        Win conditions:\r\n                        <ul>\r\n                            {userTeam.success && userTeam.success.map(t => <li className=\"text success\" key={t}>{t}</li>)}\r\n                            {userRole.fail && userRole.fail.map(t => <li className=\"text danger\" key={t}>{t}</li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            <List verticalAlign='middle' size='large' celled>\r\n                {members.map(m => {\r\n                    const role = getVision(status, user, m);\r\n                    return <List.Item key={m.login}>\r\n                    <Image avatar src={roleTraits[role].icon}/>\r\n                    <List.Content>\r\n                        <List.Header>{m.login}</List.Header>\r\n                        {status !== STATUS.NEW && <List.Description>\r\n                            {roleTraits[role].title}\r\n                        </List.Description>}\r\n                    </List.Content>\r\n                    {user.host && status === STATUS.NEW && <List.Content floated='right'>\r\n                        <Button icon onClick={() => this.kick(m.login)} color='red'>\r\n                            <Icon name='thumbs down'/>\r\n                        </Button>\r\n                    </List.Content>}\r\n                    {user.host && status !== STATUS.NEW && m.bot && <List.Content floated='right'>\r\n                        <Button icon onClick={() => this.setVision(m.login)} color='blue'>\r\n                            <Icon name='eye'/>\r\n                        </Button>\r\n                    </List.Content>}\r\n                </List.Item>})}\r\n            </List>\r\n            <div className=\"ui fluid buttons\">\r\n                {user.host && status === STATUS.NEW && <button className=\"ui primary button\" onClick={() => this.addBot()}>Add bot</button>}\r\n                {user.bot && <button className=\"ui positive button\" onClick={()=>this.setVision(members.find(m=>m.host).login)}>Return to host</button>}\r\n                <button className=\"ui negative button\" onClick={onLeave}>Leave</button>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n\r\n\r\n    kick(login){\r\n        const {roomId, api} = this.props;\r\n        api.kick(login, roomId);\r\n    }\r\n\r\n    addBot(){\r\n        const {roomId, api} = this.props;\r\n        api.addBot(roomId);\r\n    }\r\n\r\n    setVision(login){\r\n        this.props.setVision && this.props.setVision(login);\r\n    }\r\n\r\n}\r\n\r\nfunction getVision(status, user, member) {\r\n    switch (status) {\r\n        case STATUS.FINISHED: return member.role;\r\n        case STATUS.STARTED: return user.login === member.login ? member.role : getRoleVision(user.role, member.originalRole);\r\n        default: return ROLES.UNKNOWN;\r\n    }\r\n}","import React from \"react\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../../domain/roles\";\r\n\r\nconst options = Object.values(roleTraits).filter(r => !r.base && r.side);\r\n\r\nexport class RoleCustomizeForm extends React.Component{\r\n\r\n    render() {\r\n        const {room, api, roomId, user} = this.props;\r\n        const {members, roles = []} = room;\r\n\r\n\r\n        return <React.Fragment>\r\n                <div className=\"ui large message\">\r\n                    <div className=\"content\">\r\n                        <p>Waiting for other players to join</p>\r\n                        <p><a className=\"roomLink\" href={`#${roomId}`}>ROOM LINK</a></p>\r\n                    </div>\r\n                </div>\r\n                <p><b>People in this room ({members.length}):</b> {members.map(m=>m.login).join(\", \")}</p>\r\n            <p><b>Possible roles:</b> {[ROLES.RESISTANCE, ROLES.SPY, ...roles]\r\n                .map((r,i) => [\r\n                    i>0 &&\", \",\r\n                    <span key={i} className={teamTraits[roleTraits[r].side].color}>{roleTraits[r].title}</span>])}\r\n                </p>\r\n            {user.host && <div className=\"ui form\">\r\n                    {   options.map(r =>\r\n                            <div className=\"field\" key={r.id}>\r\n                                <div className=\"ui checkbox\" onClick={()=>{this.toggleRole(r.id)}}>\r\n                                    <input type=\"checkbox\" className=\"hidden\" checked={roles.includes(r.id)} value={r.id} onChange={()=>{}}/>\r\n                                    <label>{r.title}</label>\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    <button className=\"ui fluid positive button\" onClick={()=>{this.start()}}>Start</button>\r\n                </div>}\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n    toggleRole(role) {\r\n        const {room:{roles = []}, api, roomId} = this.props;\r\n        if(roles.includes(role)){\r\n            api.setRoles(roomId, roles.filter(r => r!==role));\r\n        }else{\r\n            api.setRoles(roomId, [...roles, role]);\r\n        }\r\n    }\r\n\r\n    start(){\r\n        const {room:{members}, api, roomId} = this.props;\r\n        if(members.length>=5){\r\n            api.start(roomId);\r\n        }\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\nimport {participantsCount} from \"../../../../domain/missions\";\r\n\r\nexport class ParticipantsForm extends React.Component{\r\n\r\n    render() {\r\n        const {room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        console.log(mission);\r\n        const numParticipants = participantsCount[room.members.length][mission.num];\r\n\r\n        return <div className=\"ui form\">\r\n            <h4 className=\"ui dividing header\">You are the Leader. Choose {numParticipants} operatives for this mission</h4>\r\n            {   members.map((m,mid) =>\r\n                <div className=\"field\" key={m.login}>\r\n                    <div className=\"ui checkbox\" onClick={()=>{this.toggleParticipant(mid)}}>\r\n                        <input type=\"checkbox\" className=\"hidden\" checked={mission.participants.includes(mid)} value={mid} onChange={()=>{}}/>\r\n                        <label>{m.login}</label>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            {mission.participants.length === numParticipants && <button className=\"ui positive fluid button\" onClick={() => this.propose()}>Propose team</button>}\r\n        </div>\r\n    }\r\n\r\n    toggleParticipant(mid) {\r\n        const {roomId, api, room} = this.props;\r\n        api.updateCurrentMission(roomId, mission => {\r\n            const participants = mission.participants;\r\n            const numParticipants = participantsCount[room.members.length][mission.num];\r\n            if(participants.includes(mid)){\r\n                return {...mission, participants: participants.filter(id => id!==mid)};\r\n            }else if(participants.length<numParticipants){\r\n                return {...mission, participants: [...participants, mid]};\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n\r\n    propose(){\r\n        const {api, roomId} = this.props;\r\n        api.proposeTeam(roomId);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\n\r\nexport class MissionStatus extends React.Component{\r\n\r\n    render() {\r\n        const {room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n\r\n        return <React.Fragment>\r\n            {mission.status === OP_STATUS.PREPARE && <div className=\"ui yellow message\">\r\n                <div className=\"header\">Waiting for the Leader to propose a team</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.VOTE && <div className=\"ui blue message\">\r\n                <div className=\"header\">Approve or reject this team</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.PROGRESS && <div className=\"ui blue message\">\r\n                <div className=\"header\">Mission is in progress</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.REJECTED && <div className=\"ui message\">\r\n                <div className=\"header\">The team was rejected by the majority</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.FAIL && <div className=\"ui red message\">\r\n                <div className=\"header\">The team has failed your expectations</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.SUCCESS && <div className=\"ui green message\">\r\n                <div className=\"header\">The team was successful</div>\r\n            </div>}\r\n        </React.Fragment>\r\n\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport {getRoleVision, roleTraits} from \"../../../../domain/roles\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\nimport {MissionStatus} from \"../MissionStatus\";\r\n\r\n\r\nexport class ParticipantsStage extends React.Component {\r\n\r\n    render() {\r\n        const {user, room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const leader = members[mission.leader];\r\n        const leaderVision = leader.login === user.login ? user.role : getRoleVision(user.role, leader.role);\r\n        return <React.Fragment>\r\n            <MissionStatus room={room}/>\r\n            <h3 className=\"ui header\">\r\n                <img className=\"ui avatar image\" src={roleTraits[leaderVision].icon}/>\r\n                <div className=\"content\">\r\n                    Leader {leader.login}\r\n                    {roleTraits[leaderVision].title && <div className=\"sub header\">{roleTraits[leaderVision].title}</div>}\r\n                </div>\r\n            </h3>\r\n            <div className=\"content\">Proposed operatives:</div>\r\n            <div className=\"ui list\">\r\n                {mission.participants.map(mid => {\r\n                    const participant = members[mid];\r\n                    const vision = participant.login === user.login ? user.role : getRoleVision(user.role, participant.originalRole);\r\n                    return <div className=\"item\" key={mid}>\r\n                        <img className=\"ui avatar image\" src={roleTraits[vision].icon}/>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">{participant.login}</div>\r\n                            <div className=\"description\">{roleTraits[vision].title}</div>\r\n                        </div>\r\n                    </div>})}\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS, VOTE} from \"../../../../api/enum\";\r\n\r\nexport class VoteForm extends React.Component{\r\n\r\n    render() {\r\n        const {user, room, api, roomId, mission} = this.props;\r\n        const {vote = {}} = mission;\r\n        const curVote = vote[room.members.findIndex(m => m.login === user.login)];\r\n\r\n        return curVote ?\r\n            (curVote === VOTE.YES ?\r\n                <div className=\"ui green message\"><div className=\"header\">You approved the mission. Waiting for other player to vote</div></div> :\r\n                <div className=\"ui red message\"><div className=\"header\">You rejected the mission. Waiting for other player to vote</div></div>) :\r\n            <div className=\"ui fluid buttons\">\r\n                <button className=\"ui red button\" onClick={()=>this.vote(VOTE.NO)}>\r\n                    <i className=\"thumbs down icon\"/>\r\n                    Reject\r\n                </button>\r\n                <button className=\"ui green button\" onClick={()=>this.vote(VOTE.YES)}>\r\n                    <i className=\"thumbs up icon\"/>\r\n                    Approve\r\n                </button>\r\n            </div>\r\n    }\r\n\r\n\r\n    vote(resolution){\r\n        const {roomId, api, room, user} = this.props;\r\n        const userNum = room.members.findIndex(m => m.login === user.login);\r\n        api.voteTeam(roomId, userNum, resolution);\r\n    }\r\n}","import React from \"react\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../../domain/roles\";\r\n\r\nexport class DefectorMessage extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, mission} = this.props;\r\n\r\n        if((user.role === ROLES.DEFECTOR || user.role === ROLES.SPY_DEFECTOR) && room.defectorTurn.includes(mission.num)){\r\n            const role = user.role === ROLES.DEFECTOR ? roleTraits[ROLES.SPY_DEFECTOR] : roleTraits[ROLES.DEFECTOR];\r\n            return <div className=\"ui fluid card\">\r\n                <div className=\"content\">\r\n                        <img className=\"right floated small ui image\" src={role.icon}/>\r\n                        <div className=\"header\">\r\n                            Your allegiance has changed\r\n                        </div>\r\n                        <div className=\"meta\">\r\n                            Defector action\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            From the next turn you are sided with <b className={teamTraits[role.side].color}>{teamTraits[role.side].title}</b>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {VOTE} from \"../../../../api/enum\";\r\n\r\nexport class VotesList extends React.Component {\r\n\r\n    render() {\r\n        const {room, mission} = this.props;\r\n\r\n        return <div className=\"ui  divided list\">\r\n            {room.members.map((m,id) => <div className=\"item\" key={m.login}>\r\n                <div className=\"right floated content\">\r\n                    {mission.vote[id] === VOTE.YES ? <i className=\"thumbs up icon success text\"/> :\r\n                        <i className=\"thumbs down icon danger text\"/>}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {m.login}\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../api/enum\";\r\nimport {ParticipantsForm} from \"./ParticipantsForm\";\r\nimport {ParticipantsStage} from \"./ParticipantsStage\";\r\nimport {VoteForm} from \"./VoteForm\";\r\nimport {DefectorMessage} from \"./DefectorMessage\";\r\nimport {VotesList} from \"./VotesList\";\r\n\r\nexport class PlaySession extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, api, roomId} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const leader = members[mission.leader];\r\n        const showParticipantsForm = mission.status === OP_STATUS.PREPARE && leader.login === user.login;\r\n\r\n        return <React.Fragment>\r\n            <h3 className=\"ui center aligned header\">Mission N{mission.num + 1} \"The {mission.name}\"</h3>\r\n            {showParticipantsForm && <ParticipantsForm room={room} api={api} roomId={roomId}/>}\r\n            {!showParticipantsForm && <ParticipantsStage room={room} api={api} roomId={roomId} user={user}/>}\r\n            <DefectorMessage user={user} room={room} mission={mission}/>\r\n            {mission.status === OP_STATUS.VOTE && <VoteForm room={room} user={user} api={api} mission={mission} roomId={roomId}/>}\r\n            {mission.status === OP_STATUS.PROGRESS && user.host && <div className=\"ui fluid buttons\">\r\n                <button className=\"ui red button\" onClick={()=>this.setMissionResult(OP_STATUS.FAIL)}>Mission fail</button>\r\n                <button className=\"ui green button\" onClick={()=>this.setMissionResult(OP_STATUS.SUCCESS)}>Mission success</button>\r\n            </div>}\r\n            { (mission.status === OP_STATUS.PROGRESS || OP_STATUS.isTerminal(mission.status)) && <VotesList room={room} mission={mission}/> }\r\n              {OP_STATUS.isTerminal(mission.status) && user.host &&\r\n            <button className=\"ui fluid primary button\" onClick={()=>this.nextMission()}>Next mission</button>}\r\n        </React.Fragment>\r\n    }\r\n\r\n    setMissionResult(result) {\r\n        const {roomId, api} = this.props;\r\n        api.updateCurrentMission(roomId, mission => {\r\n            if(mission.status === OP_STATUS.PROGRESS){\r\n                return {...mission, status: result};\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n\r\n    nextMission() {\r\n        const {roomId, api} = this.props;\r\n        api.nextMission(roomId);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {TEAM} from \"../../../api/enum\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nexport class ScoreBoard extends React.Component{\r\n\r\n    render() {\r\n        const {room:{score}} = this.props;\r\n\r\n        if(score[TEAM.BAD] > score[TEAM.GOOD]) {\r\n            return <React.Fragment>\r\n                    <img className=\"ui medium circular image centered\" src={roleTraits[ROLES.SPY].icon}/>\r\n                    <h2 className={`ui center aligned header ${teamTraits[TEAM.BAD].color}`}>The Spies Won</h2>\r\n            </React.Fragment>\r\n        }else{\r\n            return <React.Fragment>\r\n                <img className=\"ui medium circular image centered\" src={roleTraits[ROLES.RESISTANCE].icon}/>\r\n                <h2 className={`ui center aligned header ${teamTraits[TEAM.GOOD].color}`}>The Resistance Won</h2>\r\n            </React.Fragment>\r\n        }\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {STATUS} from \"../../../api/enum\";\r\nimport {RoleCustomizeForm} from \"../PlaySession/RoleCustomizeForm\";\r\nimport {PlaySession} from \"../PlaySession\";\r\nimport {ScoreBoard} from \"../ScoreBoard\";\r\n\r\nexport class Board  extends React.Component{\r\n\r\n    render(){\r\n        const {room, api, roomId, user} = this.props;\r\n        const {status} = room;\r\n\r\n        return <React.Fragment>\r\n            {status === STATUS.NEW && <RoleCustomizeForm room={room} api={api} roomId={roomId} user={user}/>}\r\n            {status === STATUS.STARTED && <PlaySession room={room} api={api} roomId={roomId} user={user}/>}\r\n            {status === STATUS.FINISHED && <ScoreBoard room={room}/>}\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Header} from \"semantic-ui-react\";\r\n\r\nimport {gameApi} from \"../../api/game\";\r\nimport {STATUS} from \"../../api/enum\";\r\nimport {BottomMenu} from \"./BottomMenu\";\r\nimport {MembersList} from \"./MembersList\";\r\nimport './index.css';\r\nimport {Board} from \"./Board\";\r\n\r\nexport const TABS = {\r\n    BOARD: 'BOARD',\r\n    MEMBERS: 'MEMBERS',\r\n    HISTORY: 'HISTORY'\r\n};\r\n\r\nexport class Room extends React.Component {\r\n\r\n    state = {\r\n        room: null,\r\n        errMsg: null,\r\n        tab: TABS.BOARD\r\n    };\r\n\r\n    removeListener = null;\r\n\r\n    render() {\r\n        const {login, roomId, setVision} = this.props;\r\n        const {room, errMsg, tab} = this.state;\r\n        const user = room && room.members.find(u => u.login === login);\r\n        return user && room ?\r\n                <div className=\"room\">\r\n                    {errMsg && <div className=\"ui negative message room-msg\">\r\n                        <div className=\"header\">Something went wrong</div>\r\n                        <p>{errMsg}</p>\r\n                    </div>}\r\n                    <div className=\"room-content\">\r\n                        {tab === TABS.MEMBERS &&\r\n                            <MembersList room={room} user={user} api={gameApi} roomId={roomId} onLeave={() => this.leave()} setVision={setVision}/>\r\n                        }\r\n                        {tab === TABS.BOARD && <Board room={room} user={user} roomId={roomId} api={gameApi}/>}\r\n                    </div>\r\n                    <BottomMenu onTabSet={(tab)=>this.setState({tab})} tab={tab}/>\r\n                </div>\r\n             : <Header centered=\"true\" as='h5'>Searching for a room</Header>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {roomId} = this.props;\r\n        this.removeListener = gameApi.listenRoom(roomId, (room) => {\r\n            this.setState({\r\n                room: room.data()\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(this.removeListener){\r\n            this.removeListener();\r\n            this.removeListener = null;\r\n        }\r\n    }\r\n\r\n    start = () => {\r\n        this.clearErr();\r\n        const {room} = this.state;\r\n        const {roomId} = this.props;\r\n        if(room.status === STATUS.NEW && room.members.length >= 1 && room.members.length < 10){\r\n            gameApi.start(roomId).catch(err => {\r\n                this.setState({\r\n                    errMsg: err.message || 'Unknown error'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    end = () => {\r\n        this.clearErr();\r\n        const {roomId} = this.props;\r\n        gameApi.end(roomId).catch(err => {\r\n            this.setState({\r\n                errMsg: err.message || 'Unknown error'\r\n            })\r\n        });\r\n    };\r\n\r\n    clearErr = () => {\r\n        this.setState({\r\n            errMsg: null\r\n        })\r\n    };\r\n\r\n    leave(){\r\n        const {onLeave} = this.props;\r\n        onLeave && onLeave();\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nfunction setCred(cred){\r\n    localStorage.setItem('cred', JSON.stringify(cred));\r\n}\r\n\r\nfunction clearCred() {\r\n    localStorage.removeItem('cred');\r\n}\r\n\r\nfunction getCred() {\r\n    const str = localStorage.getItem('cred');\r\n    return str ? JSON.parse(str) : null;\r\n}\r\n\r\nexport const credApi = {setCred, getCred, clearCred};","import React from \"react\";\r\nimport {Enter} from \"../Enter\";\r\nimport {Room} from \"../Room\";\r\nimport {gameApi} from \"../../api/game\";\r\nimport {credApi} from \"../../api/store\";\r\n\r\nexport class App extends React.Component {\r\n\r\n    state = {\r\n        roomId: null,\r\n        login: null,\r\n        secret: null,\r\n        ready: false\r\n    };\r\n\r\n    render() {\r\n        const {roomId, login, secret} = this.state;\r\n\r\n        return <React.Fragment>\r\n                    {!roomId && <Enter onEnter={this.onEnter}/>}\r\n                    {roomId && <Room roomId={roomId} login={login} secret={secret} onLeave={this.onLeave} setVision={this.setVision}/>}\r\n            </React.Fragment>\r\n    }\r\n\r\n    onEnter = (cred) => {\r\n        credApi.setCred(cred);\r\n        this.setState({\r\n            ...cred\r\n        })\r\n    };\r\n\r\n    onLeave = () => {\r\n        credApi.clearCred();\r\n        window.location = '';\r\n    };\r\n\r\n    setVision = (login) => {\r\n        this.setState({\r\n            login\r\n        })\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.tryLogin();\r\n    }\r\n\r\n    tryLogin = () => {\r\n        const path = window.location.pathname.split('/').filter(Boolean);\r\n        const id = path[path.length - 1];\r\n        const cred = credApi.getCred();\r\n        if(cred && (!id || cred.roomId === id)){\r\n            gameApi.login(cred).then(() => {\r\n                this.setState({\r\n                    ...cred\r\n                })\r\n            }).catch((e) => {\r\n                console.error('Failed to rejoin the game', e);\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}