{"version":3,"sources":["domain/icons/secret-agent.svg","domain/icons/soldier.svg","domain/icons/anonymous.svg","domain/icons/captain.svg","domain/icons/captain-red.svg","domain/icons/ninja.svg","domain/icons/bodyguard.svg","cred.js","firebase.js","api/enum.js","domain/roles.js","domain/bots.js","domain/missions.js","api/game.js","api/util.js","components/Enter/index.js","components/Room/BottomMenu/index.js","components/Room/MembersList/index.js","components/Room/PlaySession/RoleCustomizeForm/index.js","components/Room/PlaySession/ParticipantsForm/index.js","components/Room/PlaySession/MissionStatus/index.js","components/Room/PlaySession/ParticipantsStage/index.js","components/Room/PlaySession/VoteForm/index.js","components/Room/PlaySession/DefectorMessage/index.js","components/Room/PlaySession/VotesList/index.js","components/Room/PlaySession/MissionAction/index.js","components/Room/PlaySession/index.js","components/Room/ScoreBoard/index.js","components/Room/Board/index.js","components/Room/History/index.js","components/Room/index.js","api/store.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","firebaseCred","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","db","firestore","STATUS","NEW","STARTED","FINISHED","TEAM","BAD","GOOD","RANDOM","GAME_TYPE","CLASSIC","AVALON","OP_STATUS","PREPARE","VOTE","PROGRESS","REJECTED","SUCCESS","FAIL","isTerminal","status","isLater","ref","cur","refIndex","statusOrder","indexOf","curIndex","YES","NO","MISSION_OPT","REVERSE","CHIEF_FAIL","missionStatusTitle","_missionStatusTitle","Object","defineProperty","ROLES","RESISTANCE","SPY","BODY_GUARD","COMMANDER","FALSE_COMMANDER","ASSASSIN","UNKNOWN","SPY_DEFECTOR","DEFECTOR","DEEP_COVER_SPY","BLIND_SPY","roleTraits","_roleTraits","id","side","title","icon","assassinIcon","core","falseCommanderIcon","info","spyIcon","base","commanderIcon","bodyGuardIcon","resistanceIcon","anonymousIcon","teamTraits","_teamTraits","color","success","fail","assignRoles","playersPrefSide","gameRoles","teams","_playersPrefSide$redu","_ref","reduce","result","i","objectSpread","concat","toConsumableArray","players","shuffle","slice","teamSize","length","splitTeams","Array","good","bad","filter","r","forEach","shift","array","j","Math","floor","random","_ref2","5","6","7","8","9","10","11","getRoleVision","ownRole","visionRole","getDefectorTurns","roles","ceil","makeDefectorSwap","members","map","m","role","bots","vote","mebers","votes","resolution","arguments","undefined","bot","createBot","login","Sentencer","make","toUpperCase","prefSide","doMission","proposeTeam","leader","missionNumber","participants","participantsCount","playerNum","push","getScore","missions","_missions$reduce","createMission","prev","lastId","numPlayers","num","name","calcVotesMajority","roomSize","_Object$values$reduce","summary","values","calcMissionStatus","missionNum","v","calcMissionVotes","console","log","missionFailRequirement","_callee","type","secret","regenerator_default","a","wrap","_context","next","makeSecret","collection","add","host","sent","abrupt","roomId","stop","_callee3","roomRef","_context3","doc","runTransaction","asyncToGenerator","mark","_callee2","transaction","roomDoc","room","_context2","get","exists","Error","data","some","update","_x26","apply","this","_callee5","_context5","_callee4","_context4","_x27","_callee6","cred","_context6","find","Promise","reject","_callee8","_context8","_ref3","_callee7","_score","defectorTurn","newMembers","mission","newRoom","_context7","team","originalRole","score","_x28","_callee10","_context10","_ref4","_callee9","_context9","_x29","_callee12","_context12","_ref5","_callee11","kicked","_context11","_x30","_callee14","_context14","_ref6","_callee13","_context13","_x31","updateCurrentMission","_callee16","mutator","_context16","_ref7","_callee15","_context15","_x32","_callee17","_context17","_callee18","_context18","newVote","toString","replace","_callee20","_context20","_ref8","_callee19","lastMission","_context19","includes","_x33","_callee21","userNum","_context21","_mission$result","_callee22","_context22","gameApi","create","join","listenRoom","cb","onSnapshot","start","end","kick","setRoles","nextMission","addBot","voteTeam","performMission","botMissionPerfom","getGameId","window","location","search","Enter","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","state","joinErrMsg","createErrMsg","form","React","createRef","joinPane","react_default","createElement","Tab","Pane","Form","Message","negative","Header","Field","label","control","defaultValue","Group","grouped","value","defaultChecked","Button","primary","fluid","onClick","onJoin","createPane","onCreate","onEnter","props","serialize","ReactDOM","current","hash","then","err","setState","msg","message","game","inherits","createClass","key","panes","menuItem","render","Component","BottomMenu","onTabSet","className","btnClass","TABS","MEMBERS","BOARD","HISTORY","menuTab","tab","MembersList","_this$props","user","onLeave","userRole","userTeam","Fragment","src","alt","t","List","verticalAlign","size","celled","member","getVision","Item","Image","avatar","Content","Description","floated","Icon","setVision","_this$props2","api","_this$props3","options","RoleCustomizeForm","_room$roles","href","toggleRole","checked","onChange","_this$props2$room$rol","ParticipantsForm","numParticipants","mid","toggleParticipant","propose","MissionStatus","ParticipantsStage","leaderVision","MissionStatus_MissionStatus","participant","vision","VoteForm","_mission$vote","curVote","findIndex","DefectorMessage","VotesList","MissionAction","PlaySession","showParticipantsForm","ParticipantsForm_ParticipantsForm","ParticipantsStage_ParticipantsStage","DefectorMessage_DefectorMessage","VoteForm_VoteForm","MissionAction_MissionAction","botVote","VotesList_VotesList","ScoreBoard","Board","RoleCustomizeForm_RoleCustomizeForm","PlaySession_PlaySession","ScoreBoard_ScoreBoard","History","_this$props$room","classnames","danger","index","entries","slicedToArray","Room","errMsg","removeListener","clearErr","catch","_this2","_this$state","u","MembersList_MembersList","leave","Board_Board","History_History","BottomMenu_BottomMenu","centered","as","_this3","credApi","setCred","localStorage","setItem","JSON","stringify","getCred","str","getItem","parse","clearCred","removeItem","App","ready","tryLogin","e","error","Enter_Enter","Room_Room","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b6d1e5e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/secret-agent.f4720874.svg\";","module.exports = __webpack_public_path__ + \"static/media/soldier.1cc063fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonymous.6898e435.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain.fc758069.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain-red.09706776.svg\";","module.exports = __webpack_public_path__ + \"static/media/ninja.9ff8d9ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/bodyguard.fb712ee8.svg\";","\r\nconst firebaseCred = {\r\n    apiKey: \"AIzaSyCVuB9PRtMCoDcYNR70NWWtTuJu3GU0FKM\",\r\n    authDomain: \"random-role.firebaseapp.com\",\r\n    databaseURL: \"https://random-role.firebaseio.com\",\r\n    projectId: \"random-role\",\r\n    storageBucket: \"random-role.appspot.com\",\r\n    messagingSenderId: \"71043698352\"\r\n};\r\n\r\nexport default firebaseCred;","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport firebaseCred from \"./cred\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: firebaseCred.apiKey,\r\n    authDomain: firebaseCred.authDomain,\r\n    projectId: firebaseCred.projectId\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","export const STATUS = {\r\n  NEW: 'NEW',\r\n  STARTED: 'STARTED',\r\n  FINISHED: 'FINISHED'\r\n};\r\n\r\nexport const TEAM = {\r\n  BAD: 'BAD',\r\n  GOOD: 'GOOD',\r\n  RANDOM: 'RANDOM'\r\n};\r\n\r\nexport const GAME_TYPE = {\r\n  CLASSIC: 'CLASSIC',\r\n  AVALON: 'AVALON'\r\n};\r\n\r\nexport const OP_STATUS = {\r\n  PREPARE: 'PREPARE',\r\n  VOTE: 'VOTE',\r\n  PROGRESS: 'PROGRESS',\r\n  REJECTED: 'REJECTED',\r\n  SUCCESS: 'SUCCESS',\r\n  FAIL: 'FAIL',\r\n    isTerminal(status) {\r\n      return status === OP_STATUS.REJECTED || status === OP_STATUS.SUCCESS || status === OP_STATUS.FAIL;\r\n    },\r\n    isLater(ref, cur){\r\n      const refIndex = statusOrder.indexOf(ref);\r\n      const curIndex = statusOrder.indexOf(cur);\r\n      if(refIndex === -1) return false;\r\n      if(curIndex === -1) return true;\r\n      return curIndex > refIndex;\r\n    }\r\n};\r\n\r\nconst statusOrder = [OP_STATUS.PREPARE, OP_STATUS.VOTE, OP_STATUS.PROGRESS];\r\n\r\nexport const VOTE = {\r\n  YES: 'YES',\r\n  NO: 'NO'\r\n};\r\n\r\nexport const MISSION_OPT = {\r\n  SUCCESS: 'SUCCESS',\r\n  FAIL: 'FAIL',\r\n  REVERSE: 'REVERSE',\r\n  CHIEF_FAIL: 'CHIEF_FAIL'\r\n};\r\n\r\nexport const missionStatusTitle = {\r\n  [OP_STATUS.SUCCESS]: 'Successful',\r\n  [OP_STATUS.FAIL]: 'Failed',\r\n  [OP_STATUS.PROGRESS]: 'In progress',\r\n  [OP_STATUS.REJECTED]: 'Rejected',\r\n  [OP_STATUS.VOTE]: 'Team election',\r\n  [OP_STATUS.PREPARE]: ''\r\n};","import {MISSION_OPT, TEAM} from \"../api/enum\";\r\nimport resistanceIcon from './icons/soldier.svg';\r\nimport spyIcon from './icons/secret-agent.svg';\r\nimport anonymousIcon from './icons/anonymous.svg';\r\nimport commanderIcon from './icons/captain.svg';\r\nimport falseCommanderIcon from './icons/captain-red.svg';\r\nimport assassinIcon from  './icons/ninja.svg';\r\nimport bodyGuardIcon from './icons/bodyguard.svg';\r\n\r\nexport const ROLES = {\r\n    RESISTANCE: 'RESISTANCE',\r\n    SPY: 'SPY',\r\n    BODY_GUARD: 'BODY_GUARD',\r\n    COMMANDER: 'COMMANDER',\r\n    FALSE_COMMANDER: 'FALSE_COMMANDER',\r\n    ASSASSIN: 'ASSASSIN',\r\n    UNKNOWN: 'UNKNOWN',\r\n    SPY_DEFECTOR: 'SPY_DEFECTOR',\r\n    DEFECTOR: 'DEFECTOR',\r\n    DEEP_COVER_SPY: 'DEEP_COVER_SPY',\r\n    BLIND_SPY: 'BLIND_SPY'\r\n};\r\n\r\nexport const roleTraits = {\r\n    [ROLES.ASSASSIN]: {id: ROLES.ASSASSIN, side: TEAM.BAD, title: 'Assassin', icon: assassinIcon, core: true},\r\n    [ROLES.FALSE_COMMANDER]: {id: ROLES.FALSE_COMMANDER, side: TEAM.BAD, title: 'False Commander', icon: falseCommanderIcon, info: 'Appears as Commander'},\r\n    [ROLES.SPY]: {id: ROLES.SPY, side: TEAM.BAD, title: 'Government spy', icon: spyIcon, base: true},\r\n    [ROLES.COMMANDER]: {id: ROLES.COMMANDER, side: TEAM.GOOD, title: 'Commander', icon:commanderIcon, core: true, info: 'Knows spies'},\r\n    [ROLES.BODY_GUARD]: {id: ROLES.BODY_GUARD, side: TEAM.GOOD, title: 'Bodyguard', icon:bodyGuardIcon, info: 'Knows commanders'},\r\n    [ROLES.RESISTANCE]: {id: ROLES.RESISTANCE, side: TEAM.GOOD, title: 'Member of the Resistance', icon:resistanceIcon, base: true},\r\n    [ROLES.UNKNOWN]: {id: ROLES.UNKNOWN, icon: anonymousIcon},\r\n    [ROLES.SPY_DEFECTOR]: {id:ROLES.SPY_DEFECTOR, side:TEAM.BAD, title: 'Spy Defector', icon: spyIcon, info: 'Might switch side'},\r\n    [ROLES.DEFECTOR]: {id: ROLES.DEFECTOR, side: TEAM.GOOD, title: 'Defector', icon: resistanceIcon, info: 'Might switch side'},\r\n    [ROLES.DEEP_COVER_SPY]: {id: ROLES.DEEP_COVER_SPY, side: TEAM.BAD, title: 'Deep cover Spy', icon: spyIcon, info: 'Unknown to Commander'},\r\n    [ROLES.BLIND_SPY]: {id: ROLES.BLIND_SPY, side: TEAM.BAD, title: 'Blind Spy', icon: spyIcon, info: 'Unknown to other spies'}\r\n};\r\n\r\nexport const teamTraits = {\r\n  [TEAM.BAD]: {color: 'spy text', title: 'The Spies', success: ['3 Missions fail', 'Commander named by the Assassin']},\r\n  [TEAM.GOOD]: {color: 'resistance text', title: 'The Resistance', success: ['3 Missions are completed successfully'], fail: ['Commander named by the Spies']}\r\n};\r\n\r\nexport function assignRoles(playersPrefSide, gameRoles) {\r\n    const teams = splitTeams(playersPrefSide);\r\n    const result = Array(playersPrefSide.length);\r\n    const good = shuffle(teams[TEAM.GOOD]);\r\n    const bad = shuffle(teams[TEAM.BAD]);\r\n    [...gameRoles.filter(r => roleTraits[r].core), ...shuffle(gameRoles.filter(r => !roleTraits[r].core))].forEach(r => {\r\n        if(roleTraits[r].side === TEAM.GOOD && good.length){\r\n            result[good.shift()] = r;\r\n        }else if(roleTraits[r].side === TEAM.BAD && bad.length){\r\n            result[bad.shift()] = r;\r\n        }\r\n    });\r\n    while(good.length>0){\r\n        result[good.shift()] = ROLES.RESISTANCE;\r\n    }\r\n    while(bad.length>0){\r\n        result[bad.shift()] = ROLES.SPY;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction splitTeams(playersPrefSide) {\r\n    const teams = playersPrefSide.reduce( (result, side, i) => ({...result, [side]: [...result[side], i]}), {\r\n        [TEAM.BAD]: [],\r\n        [TEAM.GOOD]: [],\r\n        [TEAM.RANDOM]: []\r\n    });\r\n    const players = [...shuffle(teams[TEAM.GOOD]), ...shuffle(teams[TEAM.RANDOM]), ...shuffle(teams[TEAM.BAD])];\r\n    return {\r\n        [TEAM.BAD]: players.slice(teamSize[players.length]),\r\n        [TEAM.GOOD]: players.slice(0, teamSize[players.length])\r\n    }\r\n}\r\n\r\n\r\nfunction shuffle(array) {\r\n    const result = array.slice();\r\n    for (let i = result.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [result[i], result[j]] = [result[j], result[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nconst teamSize = {\r\n    5: 3, 6: 4, 7: 4, 8: 5, 9: 6, 10: 6, 11: 7\r\n};\r\n\r\nexport function getRoleVision(ownRole, visionRole) {\r\n    switch (ownRole) {\r\n        case ROLES.SPY:\r\n        case ROLES.FALSE_COMMANDER:\r\n        case ROLES.ASSASSIN:\r\n        case ROLES.DEEP_COVER_SPY:\r\n            return roleTraits[visionRole].side === TEAM.GOOD ? ROLES.RESISTANCE : ROLES.SPY;\r\n        case ROLES.BODY_GUARD: return visionRole === ROLES.COMMANDER || visionRole === ROLES.FALSE_COMMANDER ? ROLES.COMMANDER : ROLES.UNKNOWN;\r\n        case ROLES.COMMANDER:\r\n            if(visionRole === ROLES.DEEP_COVER_SPY) return ROLES.RESISTANCE;\r\n            return roleTraits[visionRole].side === TEAM.GOOD ? ROLES.RESISTANCE : ROLES.SPY;\r\n        default: return ROLES.UNKNOWN;\r\n    }\r\n}\r\n\r\nexport function getDefectorTurns(roles){\r\n    return roles.filter(r => r===ROLES.SPY_DEFECTOR || r===ROLES.DEFECTOR).length === 2 ? [\r\n        Math.ceil(Math.random()*7), Math.ceil(Math.random()*7)\r\n    ] : [];\r\n}\r\n\r\nexport function makeDefectorSwap(members){\r\n    return members.map(m => {\r\n        if(m.role === ROLES.DEFECTOR) return {...m, role: ROLES.SPY_DEFECTOR};\r\n        if(m.role === ROLES.SPY_DEFECTOR) return {...m, role: ROLES.DEFECTOR};\r\n        return m;\r\n    })\r\n}\r\n\r\nexport function getMissionOptions(role, roomSize) {\r\n    if(role === ROLES.DEFECTOR || roleTraits[role].side === TEAM.BAD){\r\n        return [MISSION_OPT.FAIL, MISSION_OPT.SUCCESS]\r\n    }\r\n    return [MISSION_OPT.SUCCESS];\r\n}","import Sentencer from 'sentencer';\r\nimport {MISSION_OPT, TEAM, VOTE} from \"../api/enum\";\r\nimport {participantsCount} from \"./missions\";\r\nimport {roleTraits} from \"./roles\";\r\n\r\nfunction vote(mebers, votes, resolution = VOTE.YES) {\r\n    const result = {...votes};\r\n    mebers.forEach( (m,i) => {\r\n        if(m.bot && !result[i]){\r\n            result[i] = resolution;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nfunction createBot() {\r\n    const login = Sentencer.make('{{adjective}} {{noun}}');\r\n    return {\r\n        login: login[0].toUpperCase()+login.slice(1),\r\n        prefSide: TEAM.RANDOM,\r\n        bot: true\r\n    }\r\n}\r\n\r\nfunction doMission(members, votes) {\r\n    const result = {...votes};\r\n    members.forEach( (m,i) => {\r\n        if(m.bot && !result[i]){\r\n            result[i] = roleTraits[m.role].side === TEAM.GOOD ? MISSION_OPT.SUCCESS : MISSION_OPT.FAIL;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nfunction proposeTeam(members, leader, missionNumber) {\r\n    const participants = [];\r\n    for(let i = 0;i<participantsCount[members.length][missionNumber];i++){\r\n        let playerNum = leader + i;\r\n        if(playerNum>=members.length){\r\n            playerNum-=members.length;\r\n        }\r\n        participants.push(playerNum);\r\n    }\r\n    return participants;\r\n}\r\n\r\nexport const bots = {vote, createBot, doMission, proposeTeam};","import {MISSION_OPT, OP_STATUS, TEAM, VOTE} from \"../api/enum\";\r\nimport {bots} from \"./bots\";\r\nimport Sentencer from \"sentencer\";\r\n\r\nexport const participantsCount = {\r\n    5:[2,3,2,3,3],\r\n    6:[2,3,4,3,4],\r\n    7:[2,3,3,4,4],\r\n    8:[3,4,4,5,5],\r\n    9:[3,4,4,5,5],\r\n    10:[3,4,4,5,5],\r\n    11:[3,4,4,6,6]\r\n};\r\n\r\nexport function getScore(missions) {\r\n    return missions.reduce((r, m) => {\r\n        if(m.status === OP_STATUS.FAIL) return {...r, [TEAM.BAD]: 1 + r[TEAM.BAD]};\r\n        if(m.status === OP_STATUS.SUCCESS) return {...r, [TEAM.GOOD]: 1 + r[TEAM.GOOD]};\r\n        return r;\r\n    }, {[TEAM.GOOD]: 0, [TEAM.BAD]: 0});\r\n}\r\n\r\nexport function getNextLeader(lastId, numPlayers) {\r\n    return lastId < numPlayers-1 ? lastId + 1 : 0;\r\n}\r\n\r\nexport function createMission(prev, members) {\r\n    const num = prev ? (prev.status === OP_STATUS.REJECTED ? prev.num : prev.num + 1) : 0;\r\n    const leader = prev ? getNextLeader(prev.leader, members.length) : Math.floor(Math.random() * members.length);\r\n    const participants = members[leader].bot ? bots.proposeTeam(members, leader, num) : [];\r\n    const status = members[leader].bot ? OP_STATUS.VOTE : OP_STATUS.PREPARE;\r\n\r\n    return {num, leader, participants, vote: [], status, name: Sentencer.make('{{adjective}} {{noun}}')};\r\n}\r\n\r\nexport function calcVotesMajority(votes, roomSize) {\r\n    const summary = Object.values(votes).reduce((r, vote) => ({...r, [vote]: 1 + r[vote]}), {[VOTE.YES]: 0, [VOTE.NO]:0});\r\n    if(summary[VOTE.YES] + summary[VOTE.NO] === roomSize) {\r\n        return summary[VOTE.YES] > summary[VOTE.NO] ? OP_STATUS.PROGRESS : OP_STATUS.REJECTED;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction calcMissionVotes(votes, roomSize, missionNum) {\r\n    const values = Object.values(votes);\r\n    if(participantsCount[roomSize][missionNum] === values.length){\r\n        return values.reduce((r, v) => ({...r, [v]: 1 + (r[v] || 0)}), {});\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function missionFailRequirement(roomSize, missionNum) {\r\n    return roomSize >= 7 && missionNum===3 ? 2 : 1;\r\n}\r\n\r\nexport function calcMissionStatus(result, roomSize, missionNum) {\r\n    const summary = calcMissionVotes(result, roomSize, missionNum);\r\n    console.log(summary);\r\n    if(summary){\r\n        const status = summary[MISSION_OPT.FAIL] >= missionFailRequirement(roomSize, missionNum) ? OP_STATUS.FAIL : OP_STATUS.SUCCESS;\r\n        return {result, summary, status}\r\n    }\r\n    return {result};\r\n}","import db from '../firebase';\r\nimport {OP_STATUS, STATUS, TEAM} from \"./enum\";\r\nimport {assignRoles, getDefectorTurns, makeDefectorSwap,roleTraits} from \"../domain/roles\";\r\nimport {\r\n    calcMissionStatus,\r\n    calcVotesMajority,\r\n    createMission,\r\n    getScore,\r\n    participantsCount\r\n} from \"../domain/missions\";\r\nimport {bots} from \"../domain/bots\";\r\n\r\nasync function create(type, login, prefSide) {\r\n    const secret = makeSecret();\r\n    const ref = await db.collection('rooms').add(\r\n        {\r\n            members: [\r\n                {login, prefSide, host: true, secret}\r\n            ],\r\n            status: STATUS.NEW\r\n        }\r\n    );\r\n    return {\r\n        roomId: ref.id, secret, login\r\n    };\r\n}\r\n\r\nasync function join(id, login, prefSide) {\r\n    const roomRef = db.collection('rooms').doc(id);\r\n    const secret = makeSecret();\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        if(!roomDoc.exists){\r\n            throw new Error(\"Room not found\");\r\n        }\r\n        const room = roomDoc.data();\r\n        if(room.members.some(m => m.login === login)){\r\n            throw new Error(\"Login is in use\");\r\n        }\r\n        if(room.status !== STATUS.NEW){\r\n            throw new Error(\"The game has been started\");\r\n        }\r\n        transaction.update(roomRef, {...room, members: [...room.members, {login, prefSide, secret}]});\r\n    });\r\n    return {\r\n        roomId: id, login, secret\r\n    };\r\n}\r\n\r\nasync function addBot(roomId){\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.NEW && room.members.length < 11){\r\n            const bot = bots.createBot();\r\n            transaction.update(roomRef, {...room, members: [...room.members, bot]});\r\n        }\r\n    });\r\n}\r\n\r\nasync function login(cred) {\r\n    const {roomId, login, secret} = cred;\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    const room = await roomRef.get();\r\n    if(room.exists){\r\n        const user = room.get('members').find(m => m.login === login && m.secret === secret);\r\n        if(user){\r\n            return true;\r\n        }else{\r\n            return Promise.reject(Error('Invalid credentials'))\r\n        }\r\n    }else{\r\n        return Promise.reject(Error('Room not found'))\r\n    }\r\n}\r\n\r\nasync function start(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        const numPlayers = room.members.length;\r\n        if(numPlayers < 5 || numPlayers > 11){\r\n            throw new Error(\"Number of players should be between 5 and 11\");\r\n        }\r\n        if(room.status === STATUS.NEW){\r\n            const roles = assignRoles(room.members.map(m => m.prefSide), room.roles);\r\n            const defectorTurn = getDefectorTurns(roles);\r\n            const newMembers = room.members.map( (m,i) => ({...m, team: roleTraits[roles[i]].side, role: roles[i], originalRole: roles[i], num: i}));\r\n            const mission = createMission(null, newMembers);\r\n            const newRoom = {...room, members: newMembers, status: STATUS.STARTED, missions:[mission],\r\n                defectorTurn, score:{[TEAM.BAD]:0, [TEAM.GOOD]:0}};\r\n            transaction.update(roomRef, newRoom);\r\n        }\r\n    });\r\n}\r\n\r\nasync function end(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        transaction.update(roomRef, {...room, status: STATUS.FINISHED});\r\n    })\r\n}\r\n\r\nasync function kick(login, roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.NEW) {\r\n            const kicked = room.members.find(m => m.login === login);\r\n            if(kicked){\r\n                const newMembers = room.members.filter( m => m.login !== login);\r\n                if(kicked.host && newMembers.length){\r\n                    newMembers[0].host = true;\r\n                }\r\n                transaction.update(roomRef, {...room, members: newMembers});\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nasync function setRoles(roomId, roles) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if (room.status === STATUS.NEW) {\r\n            transaction.update(roomRef, {...room, roles});\r\n        }\r\n    });\r\n}\r\n\r\nasync function updateCurrentMission(roomId, mutator) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if (room.status === STATUS.STARTED) {\r\n            const mission = mutator(room.missions[room.missions.length-1], room);\r\n            transaction.update(roomRef, {...room, missions: [...room.missions.slice(0, room.missions.length-1),\r\n                    mission]});\r\n        }\r\n    });\r\n}\r\n\r\nasync function proposeTeam(roomId) {\r\n    await updateCurrentMission(roomId, (mission, room) => {\r\n        const numParticipants = participantsCount[room.members.length][mission.num];\r\n        if(numParticipants === mission.participants.length){\r\n            return {...mission, status: OP_STATUS.VOTE}\r\n        }else{\r\n            return mission;\r\n        }\r\n    })\r\n}\r\n\r\nasync function voteTeam(roomId, playerNum, resolution) {\r\n    await updateCurrentMission(roomId, (mission, room) => {\r\n        if(!mission.vote[playerNum]){\r\n            let newVote = {...mission.vote, [playerNum]: resolution};\r\n            if(room.members[playerNum].host){\r\n                newVote = bots.vote(room.members, newVote, resolution);\r\n            }\r\n            const result = calcVotesMajority(newVote, room.members.length);\r\n            if(result){\r\n                return {...mission, status: result, vote: newVote}\r\n            }else{\r\n                return {...mission, vote: newVote}\r\n            }\r\n        }else{\r\n            return mission;\r\n        }\r\n    })\r\n}\r\n\r\nfunction makeSecret(){\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '');\r\n}\r\n\r\nfunction listenRoom(id, cb) {\r\n    return db.collection('rooms').doc(id).onSnapshot(cb);\r\n}\r\n\r\nasync function nextMission(roomId) {\r\n    const roomRef = db.collection('rooms').doc(roomId);\r\n    await db.runTransaction( async transaction => {\r\n        const roomDoc = await roomRef.get();\r\n        const room = roomDoc.data();\r\n        if(room.status === STATUS.STARTED) {\r\n            const lastMission = room.missions[room.missions.length-1];\r\n            const score = getScore(room.missions);\r\n            if(score[TEAM.GOOD]>=3 || score[TEAM.BAD]>=3){\r\n                transaction.update(roomRef, {...room, status: STATUS.FINISHED, score});\r\n                return;\r\n            }\r\n            let members = room.members;\r\n            if(lastMission.status !== OP_STATUS.REJECTED  && room.defectorTurn.includes(lastMission.num)){\r\n                members = makeDefectorSwap(members);\r\n            }\r\n            const mission = createMission(lastMission, members);\r\n            transaction.update(roomRef, {...room, score, members, missions: [...room.missions, mission]});\r\n        }\r\n    });\r\n}\r\n\r\nasync function performMission(roomId, userNum, resolution) {\r\n    await updateCurrentMission(roomId, (mission, room) => {\r\n        const {result = {}} = mission;\r\n        result[userNum] = resolution;\r\n        return {...mission, ...calcMissionStatus(result, room.members.length, mission.num)}\r\n    })\r\n}\r\n\r\nasync function botMissionPerfom(roomId) {\r\n    await updateCurrentMission(roomId, (mission, room) => {\r\n        const result = bots.doMission(room.members.filter(m => mission.participants.includes(m.num)), mission.result || []);\r\n        return {...mission, ...calcMissionStatus(result, room.members.length, mission.num)}\r\n    })\r\n}\r\n\r\nexport const gameApi = {create, join, listenRoom, login, start, end, kick, setRoles, updateCurrentMission, nextMission, addBot, proposeTeam, voteTeam, performMission, botMissionPerfom};","export function getGameId(){\r\n    return window.location.search ? window.location.search.slice(1) : '';\r\n}","import React from \"react\";\r\nimport {Button, Form, Message, Tab} from \"semantic-ui-react\";\r\nimport {gameApi} from \"../../api/game\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport serialize from 'form-serialize';\r\nimport {GAME_TYPE, TEAM} from \"../../api/enum\";\r\nimport {getGameId} from \"../../api/util\";\r\n\r\n\r\nexport class Enter extends React.Component {\r\n\r\n    state = {\r\n        joinErrMsg: [],\r\n        createErrMsg: []\r\n    };\r\n\r\n    roomId = getGameId();\r\n    form = React.createRef();\r\n\r\n    render (){\r\n        return <Tab panes={[\r\n            {menuItem: 'JOIN', render: this.joinPane},\r\n            {menuItem: 'CREATE', render: this.createPane},\r\n        ]}/>\r\n    }\r\n\r\n    joinPane = () => {\r\n        const {joinErrMsg} = this.state;\r\n        return <Tab.Pane>\r\n            <Form ref={this.form}>\r\n                {joinErrMsg && joinErrMsg.length>0 &&\r\n                    <Message negative>\r\n                        <Message.Header>Failed to join the game</Message.Header>\r\n                        {joinErrMsg.map( m => <p>{m}</p>)}\r\n                    </Message>\r\n                }\r\n                <Form.Field label='Game ID' control='input' name=\"id\" defaultValue={this.roomId}/>\r\n                <Form.Field label='Your name' control='input' name=\"login\" type=\"text\"/>\r\n                <Form.Group grouped>\r\n                    <label>Choose your side</label>\r\n                    <Form.Field label='Resistance' control='input' type='radio' name='side' value={TEAM.GOOD}/>\r\n                    <Form.Field label='Spies' control='input' type='radio' name='side' value={TEAM.BAD}/>\r\n                    <Form.Field label='Whatever' control='input' type='radio' name='side' defaultChecked value={TEAM.RANDOM}/>\r\n                </Form.Group>\r\n                <Button primary fluid onClick={this.onJoin}>JOIN</Button>\r\n            </Form>\r\n        </Tab.Pane>\r\n    };\r\n\r\n    createPane = () => {\r\n        const {createErrMsg} = this.state;\r\n        return <Tab.Pane>\r\n            <Form ref={this.form}>\r\n                {createErrMsg && createErrMsg.length>0 &&\r\n                <Message negative>\r\n                    <Message.Header>Failed to join the game</Message.Header>\r\n                    {createErrMsg.map( m => <p>{m}</p>)}\r\n                </Message>\r\n                }\r\n                <Form.Group grouped>\r\n                    <label>Choose a game</label>\r\n                    <Form.Field label='Resistance: Hunter module' control='input' type='radio' name='game' value={GAME_TYPE.CLASSIC} defaultChecked/>\r\n                    <Form.Field label='Resistance: Assassin module' control='input' type='radio' name='game' value={GAME_TYPE.AVALON}/>\r\n                </Form.Group>\r\n                <Form.Field label='Your name' control='input' name='login'/>\r\n                <Form.Group grouped>\r\n                    <label>Choose your side</label>\r\n                    <Form.Field label='Resistance' control='input' type='radio' value={TEAM.GOOD} name='side'/>\r\n                    <Form.Field label='Spies' control='input' type='radio' value={TEAM.BAD} name='side'/>\r\n                    <Form.Field label='Whatever' control='input' type='radio' name='side' value={TEAM.RANDOM} defaultChecked/>\r\n                </Form.Group>\r\n                <Button primary fluid onClick={this.onCreate}>CREATE</Button>\r\n            </Form>\r\n        </Tab.Pane>\r\n    };\r\n\r\n    onJoin = () => {\r\n        const {onEnter} = this.props;\r\n        const value = serialize(ReactDOM.findDOMNode(this.form.current), {hash: true});\r\n        if(value.login && value.id && value.side){\r\n            gameApi.join(value.id, value.login, value.side).then(cred => {\r\n                onEnter && onEnter(cred);\r\n            }, err => {\r\n                this.setState({\r\n                    joinErrMsg: [err.msg || err.message || err || 'Unknown error']\r\n                })\r\n            })\r\n        }\r\n    };\r\n\r\n    onCreate = () => {\r\n        const value = serialize(ReactDOM.findDOMNode(this.form.current), {hash: true});\r\n        const {onEnter} = this.props;\r\n        if(value.side && value.login && value.game){\r\n            gameApi.create(value.game, value.login, value.side).then(cred => {\r\n                onEnter && onEnter(cred)\r\n            }, err => {\r\n                this.setState({\r\n                    createErrMsg: [err.msg || err.message || err || 'Unknown error']\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n}","import React from \"react\";\r\nimport {TABS} from \"../index\";\r\n\r\nexport class BottomMenu extends React.Component {\r\n\r\n    render() {\r\n        const {onTabSet} = this.props;\r\n        return <div className=\"ui three buttons room-menu\">\r\n            <button className={`ui button ${this.btnClass(TABS.MEMBERS)}`} onClick={()=>onTabSet(TABS.MEMBERS)}><i className=\"eye slash icon\"/></button>\r\n            <button className={`ui button ${this.btnClass(TABS.BOARD)}`} onClick={()=>onTabSet(TABS.BOARD)}><i className=\"icon users\"/> </button>\r\n            <button className={`ui button ${this.btnClass(TABS.HISTORY)}`} onClick={()=>onTabSet(TABS.HISTORY)}><i className=\"stack exchange icon\"/></button>\r\n        </div>\r\n    }\r\n\r\n    btnClass(menuTab) {\r\n        const tab = this.props.tab;\r\n        return tab === menuTab ? 'secondary': ''\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {STATUS} from \"../../../api/enum\";\r\nimport {Button, Icon, Image, List} from \"semantic-ui-react\";\r\nimport {getRoleVision, ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nexport class MembersList extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, onLeave} = this.props;\r\n        const {members, status} = room;\r\n        const userRole = user.role && roleTraits[user.role];\r\n        const userTeam = userRole && teamTraits[userRole.side];\r\n        return <React.Fragment>\r\n            {userRole && <div className=\"ui fluid card\">\r\n                <div className=\"content\">\r\n                    <img className=\"right floated tiny ui image\" src={userRole.icon} alt={userRole.title}/>\r\n                    <div className={`header ${userTeam.color}`} >\r\n                        {userRole.title}\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        Allegiance: {userTeam.title}\r\n                    </div>\r\n                    <p/>\r\n                    {userRole.info && <p>{userRole.info}</p>}\r\n                    <div>\r\n                        Win conditions:\r\n                        <ul>\r\n                            {userTeam.success && userTeam.success.map(t => <li className=\"text success\" key={t}>{t}</li>)}\r\n                            {userRole.fail && userRole.fail.map(t => <li className=\"text danger\" key={t}>{t}</li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            <List verticalAlign='middle' size='large' celled>\r\n                {members.map(m => {\r\n                    const role = getVision(status, user, m);\r\n                    return <List.Item key={m.login}>\r\n                    <Image avatar src={roleTraits[role].icon}/>\r\n                    <List.Content>\r\n                        <List.Header>{m.login}</List.Header>\r\n                        {status !== STATUS.NEW && <List.Description>\r\n                            {roleTraits[role].title}\r\n                        </List.Description>}\r\n                    </List.Content>\r\n                    {user.host && status === STATUS.NEW && <List.Content floated='right'>\r\n                        <Button icon onClick={() => this.kick(m.login)} color='red'>\r\n                            <Icon name='thumbs down'/>\r\n                        </Button>\r\n                    </List.Content>}\r\n                    {user.host && status !== STATUS.NEW && m.bot && <List.Content floated='right'>\r\n                        <Button icon onClick={() => this.setVision(m.login)} color='blue'>\r\n                            <Icon name='eye'/>\r\n                        </Button>\r\n                    </List.Content>}\r\n                </List.Item>})}\r\n            </List>\r\n            <div className=\"ui fluid buttons\">\r\n                {user.host && status === STATUS.NEW && <button className=\"ui primary button\" onClick={() => this.addBot()}>Add bot</button>}\r\n                {user.bot && <button className=\"ui positive button\" onClick={()=>this.setVision(members.find(m=>m.host).login)}>Return to host</button>}\r\n                <button className=\"ui negative button\" onClick={onLeave}>Leave</button>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n\r\n\r\n    kick(login){\r\n        const {roomId, api} = this.props;\r\n        api.kick(login, roomId);\r\n    }\r\n\r\n    addBot(){\r\n        const {roomId, api} = this.props;\r\n        api.addBot(roomId);\r\n    }\r\n\r\n    setVision(login){\r\n        this.props.setVision && this.props.setVision(login);\r\n    }\r\n\r\n}\r\n\r\nfunction getVision(status, user, member) {\r\n    switch (status) {\r\n        case STATUS.FINISHED: return member.role;\r\n        case STATUS.STARTED: return user.login === member.login ? member.role : getRoleVision(user.role, member.originalRole);\r\n        default: return ROLES.UNKNOWN;\r\n    }\r\n}","import React from \"react\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../../domain/roles\";\r\n\r\nconst options = Object.values(roleTraits).filter(r => !r.base && r.side);\r\n\r\nexport class RoleCustomizeForm extends React.Component{\r\n\r\n    render() {\r\n        const {room, roomId, user} = this.props;\r\n        const {members, roles = []} = room;\r\n\r\n\r\n        return <React.Fragment>\r\n                <div className=\"ui large message\">\r\n                    <div className=\"content\">\r\n                        <p>Waiting for other players to join</p>\r\n                        <p><a className=\"roomLink\" href={`?${roomId}`}>ROOM LINK</a></p>\r\n                    </div>\r\n                </div>\r\n                <p><b>People in this room ({members.length}):</b> {members.map(m=>m.login).join(\", \")}</p>\r\n            <p><b>Possible roles:</b> {[ROLES.RESISTANCE, ROLES.SPY, ...roles]\r\n                .map((r,i) => [\r\n                    i>0 &&\", \",\r\n                    <span key={i} className={teamTraits[roleTraits[r].side].color}>{roleTraits[r].title}</span>])}\r\n                </p>\r\n            {user.host && <div className=\"ui form\">\r\n                    {   options.map(r =>\r\n                            <div className=\"field\" key={r.id}>\r\n                                <div className=\"ui checkbox\" onClick={()=>{this.toggleRole(r.id)}}>\r\n                                    <input type=\"checkbox\" className=\"hidden\" checked={roles.includes(r.id)} value={r.id} onChange={()=>{}}/>\r\n                                    <label>{r.title}</label>\r\n                                </div>\r\n                            </div>)\r\n                    }\r\n                    <button className=\"ui fluid positive button\" onClick={()=>{this.start()}}>Start</button>\r\n                </div>}\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n    toggleRole(role) {\r\n        const {room:{roles = []}, api, roomId} = this.props;\r\n        if(roles.includes(role)){\r\n            api.setRoles(roomId, roles.filter(r => r!==role));\r\n        }else{\r\n            api.setRoles(roomId, [...roles, role]);\r\n        }\r\n    }\r\n\r\n    start(){\r\n        const {room:{members}, api, roomId} = this.props;\r\n        if(members.length>=5){\r\n            api.start(roomId);\r\n        }\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {participantsCount} from \"../../../../domain/missions\";\r\n\r\nexport class ParticipantsForm extends React.Component{\r\n\r\n    render() {\r\n        const {room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const numParticipants = participantsCount[room.members.length][mission.num];\r\n\r\n        return <div className=\"ui form\">\r\n            <h4 className=\"ui dividing header\">You are the Leader. Choose {numParticipants} operatives for this mission</h4>\r\n            {   members.map((m,mid) =>\r\n                <div className=\"field\" key={m.login}>\r\n                    <div className=\"ui checkbox\" onClick={()=>{this.toggleParticipant(mid)}}>\r\n                        <input type=\"checkbox\" className=\"hidden\" checked={mission.participants.includes(mid)} value={mid} onChange={()=>{}}/>\r\n                        <label>{m.login}</label>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            {mission.participants.length === numParticipants && <button className=\"ui positive fluid button\" onClick={() => this.propose()}>Propose team</button>}\r\n        </div>\r\n    }\r\n\r\n    toggleParticipant(mid) {\r\n        const {roomId, api, room} = this.props;\r\n        api.updateCurrentMission(roomId, mission => {\r\n            const participants = mission.participants;\r\n            const numParticipants = participantsCount[room.members.length][mission.num];\r\n            if(participants.includes(mid)){\r\n                return {...mission, participants: participants.filter(id => id!==mid)};\r\n            }else if(participants.length<numParticipants){\r\n                return {...mission, participants: [...participants, mid]};\r\n            }else{\r\n                return mission;\r\n            }\r\n        });\r\n    }\r\n\r\n    propose(){\r\n        const {api, roomId} = this.props;\r\n        api.proposeTeam(roomId);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../../api/enum\";\r\n\r\nexport class MissionStatus extends React.Component{\r\n\r\n    render() {\r\n        const {room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n\r\n        return <React.Fragment>\r\n            {mission.status === OP_STATUS.PREPARE && <div className=\"ui yellow message\">\r\n                <div className=\"header\">Waiting for the Leader to propose a team</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.VOTE && <div className=\"ui blue message\">\r\n                <div className=\"header\">Approve or reject this team</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.PROGRESS && <div className=\"ui blue message\">\r\n                <div className=\"header\">Mission is in progress</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.REJECTED && <div className=\"ui message\">\r\n                <div className=\"header\">The team was rejected by the majority</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.FAIL && <div className=\"ui red message\">\r\n                <div className=\"header\">The team has failed your expectations</div>\r\n            </div>}\r\n            {mission.status === OP_STATUS.SUCCESS && <div className=\"ui green message\">\r\n                <div className=\"header\">The team was successful</div>\r\n            </div>}\r\n        </React.Fragment>\r\n\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport {getRoleVision, roleTraits} from \"../../../../domain/roles\";\r\nimport {MissionStatus} from \"../MissionStatus\";\r\n\r\n\r\nexport class ParticipantsStage extends React.Component {\r\n\r\n    render() {\r\n        const {user, room} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const leader = members[mission.leader];\r\n        const leaderVision = leader.login === user.login ? user.role : getRoleVision(user.role, leader.role);\r\n        return <React.Fragment>\r\n            <MissionStatus room={room}/>\r\n            <h3 className=\"ui header\">\r\n                <img alt=\"leader role\" className=\"ui avatar image\" src={roleTraits[leaderVision].icon}/>\r\n                <div className=\"content\">\r\n                    Leader {leader.login}\r\n                    {roleTraits[leaderVision].title && <div className=\"sub header\">{roleTraits[leaderVision].title}</div>}\r\n                </div>\r\n            </h3>\r\n            <div className=\"content\">Proposed operatives:</div>\r\n            <div className=\"ui list\">\r\n                {mission.participants.map(mid => {\r\n                    const participant = members[mid];\r\n                    const vision = participant.login === user.login ? user.role : getRoleVision(user.role, participant.originalRole);\r\n                    return <div className=\"item\" key={mid}>\r\n                        <img alt=\"role\" className=\"ui avatar image\" src={roleTraits[vision].icon}/>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">{participant.login}</div>\r\n                            <div className=\"description\">{roleTraits[vision].title}</div>\r\n                        </div>\r\n                    </div>})}\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {VOTE} from \"../../../../api/enum\";\r\n\r\nexport class VoteForm extends React.Component{\r\n\r\n    render() {\r\n        const {user, room, mission} = this.props;\r\n        const {vote = {}} = mission;\r\n        const curVote = vote[room.members.findIndex(m => m.login === user.login)];\r\n\r\n        return curVote ?\r\n            (curVote === VOTE.YES ?\r\n                <div className=\"ui green message\"><div className=\"header\">You approved the mission. Waiting for other player to vote</div></div> :\r\n                <div className=\"ui red message\"><div className=\"header\">You rejected the mission. Waiting for other player to vote</div></div>) :\r\n            <div className=\"ui fluid buttons\">\r\n                <button className=\"ui red button\" onClick={()=>this.vote(VOTE.NO)}>\r\n                    <i className=\"thumbs down icon\"/>\r\n                    Reject\r\n                </button>\r\n                <button className=\"ui green button\" onClick={()=>this.vote(VOTE.YES)}>\r\n                    <i className=\"thumbs up icon\"/>\r\n                    Approve\r\n                </button>\r\n            </div>\r\n    }\r\n\r\n\r\n    vote(resolution){\r\n        const {roomId, api, room, user} = this.props;\r\n        const userNum = room.members.findIndex(m => m.login === user.login);\r\n        api.voteTeam(roomId, userNum, resolution);\r\n    }\r\n}","import React from \"react\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../../domain/roles\";\r\n\r\nexport class DefectorMessage extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, mission} = this.props;\r\n\r\n        if((user.role === ROLES.DEFECTOR || user.role === ROLES.SPY_DEFECTOR) && room.defectorTurn.includes(mission.num)){\r\n            const role = user.role === ROLES.DEFECTOR ? roleTraits[ROLES.SPY_DEFECTOR] : roleTraits[ROLES.DEFECTOR];\r\n            return <div className=\"ui fluid card\">\r\n                <div className=\"content\">\r\n                        <img alt=\"new role\" className=\"right floated small ui image\" src={role.icon}/>\r\n                        <div className=\"header\">\r\n                            Your allegiance has changed\r\n                        </div>\r\n                        <div className=\"meta\">\r\n                            Defector action\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            From the next turn you are sided with <b className={teamTraits[role.side].color}>{teamTraits[role.side].title}</b>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {VOTE} from \"../../../../api/enum\";\r\n\r\nexport class VotesList extends React.Component {\r\n\r\n    render() {\r\n        const {room, mission} = this.props;\r\n\r\n        return <div className=\"ui  divided list\">\r\n            {room.members.map((m,id) => <div className=\"item\" key={m.login}>\r\n                <div className=\"right floated content\">\r\n                    {mission.vote[id] === VOTE.YES ? <i className=\"thumbs up icon success text\"/> :\r\n                        <i className=\"thumbs down icon danger text\"/>}\r\n                </div>\r\n                <div className=\"content\">\r\n                    {m.login}\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {getMissionOptions} from \"../../../../domain/roles\";\r\nimport {MISSION_OPT} from \"../../../../api/enum\";\r\n\r\n\r\nexport class MissionAction extends React.Component {\r\n\r\n    render() {\r\n        const {mission, user, room} = this.props;\r\n        if(!mission.participants.includes(user.num) || (mission.result && mission.result[user.num]))return null;\r\n        const options = getMissionOptions(user.role, room.members.length);\r\n\r\n        return <React.Fragment>\r\n                <h4 className=\"ui message\">\r\n                    <div className=\"header\">You were selected for the mission</div>\r\n                    <p>Vote for the outcome</p>\r\n                </h4>\r\n                <div className=\"ui fluid buttons\">\r\n                    {options.includes(MISSION_OPT.FAIL) && <button className=\"ui negative button\" onClick={()=>this.vote(MISSION_OPT.FAIL)}>Fail</button>}\r\n                    {options.includes(MISSION_OPT.SUCCESS) && <button className=\"ui positive button\" onClick={()=>this.vote(MISSION_OPT.SUCCESS)}>Success</button>}\r\n                </div>\r\n            </React.Fragment>;\r\n    }\r\n\r\n    vote(resolution) {\r\n        const {roomId, user, api} = this.props;\r\n        api.performMission(roomId, user.num, resolution);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {OP_STATUS} from \"../../../api/enum\";\r\nimport {ParticipantsForm} from \"./ParticipantsForm\";\r\nimport {ParticipantsStage} from \"./ParticipantsStage\";\r\nimport {VoteForm} from \"./VoteForm\";\r\nimport {DefectorMessage} from \"./DefectorMessage\";\r\nimport {VotesList} from \"./VotesList\";\r\nimport {MissionAction} from \"./MissionAction\";\r\n\r\nexport class PlaySession extends React.Component {\r\n\r\n    render() {\r\n        const {user, room, api, roomId} = this.props;\r\n        const missionNum = room.missions.length;\r\n        const mission = room.missions[missionNum-1];\r\n        const {members} = room;\r\n        const leader = members[mission.leader];\r\n        const showParticipantsForm = mission.status === OP_STATUS.PREPARE && leader.login === user.login;\r\n\r\n        return <React.Fragment>\r\n            <h3 className=\"ui center aligned header\">Mission N{mission.num + 1} \"The {mission.name}\"</h3>\r\n            {showParticipantsForm && <ParticipantsForm room={room} api={api} roomId={roomId}/>}\r\n            {!showParticipantsForm && <ParticipantsStage room={room} api={api} roomId={roomId} user={user}/>}\r\n            <DefectorMessage user={user} room={room} mission={mission}/>\r\n            {mission.status === OP_STATUS.VOTE && <VoteForm room={room} user={user} api={api} mission={mission} roomId={roomId}/>}\r\n            {mission.status === OP_STATUS.PROGRESS && <MissionAction room={room} user={user} api={api} mission={mission} roomId={roomId}/>}\r\n            {mission.status === OP_STATUS.PROGRESS && user.host && room.members.some(m => m.bot) &&\r\n                <button className=\"ui primary button\" onClick={()=>this.botVote()}>Bot actions</button>}\r\n            { (mission.status === OP_STATUS.PROGRESS || OP_STATUS.isTerminal(mission.status)) && <VotesList room={room} mission={mission}/> }\r\n              {OP_STATUS.isTerminal(mission.status) && user.host &&\r\n            <button className=\"ui fluid primary button\" onClick={()=>this.nextMission()}>Next mission</button>}\r\n        </React.Fragment>\r\n    }\r\n\r\n    botVote(){\r\n        const {roomId, api} = this.props;\r\n        api.botMissionPerfom(roomId);\r\n    }\r\n\r\n    nextMission() {\r\n        const {roomId, api} = this.props;\r\n        api.nextMission(roomId);\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {TEAM} from \"../../../api/enum\";\r\nimport {ROLES, roleTraits, teamTraits} from \"../../../domain/roles\";\r\n\r\nexport class ScoreBoard extends React.Component{\r\n\r\n    render() {\r\n        const {room:{score}} = this.props;\r\n\r\n        if(score[TEAM.BAD] > score[TEAM.GOOD]) {\r\n            return <React.Fragment>\r\n                    <img alt=\"winner\" className=\"ui medium circular image centered\" src={roleTraits[ROLES.SPY].icon}/>\r\n                    <h2 className={`ui center aligned header ${teamTraits[TEAM.BAD].color}`}>The Spies Won</h2>\r\n            </React.Fragment>\r\n        }else{\r\n            return <React.Fragment>\r\n                <img alt=\"winner\" className=\"ui medium circular image centered\" src={roleTraits[ROLES.RESISTANCE].icon}/>\r\n                <h2 className={`ui center aligned header ${teamTraits[TEAM.GOOD].color}`}>The Resistance Won</h2>\r\n            </React.Fragment>\r\n        }\r\n\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {STATUS} from \"../../../api/enum\";\r\nimport {RoleCustomizeForm} from \"../PlaySession/RoleCustomizeForm\";\r\nimport {PlaySession} from \"../PlaySession\";\r\nimport {ScoreBoard} from \"../ScoreBoard\";\r\n\r\nexport class Board  extends React.Component{\r\n\r\n    render(){\r\n        const {room, api, roomId, user} = this.props;\r\n        const {status} = room;\r\n\r\n        return <React.Fragment>\r\n            {status === STATUS.NEW && <RoleCustomizeForm room={room} api={api} roomId={roomId} user={user}/>}\r\n            {status === STATUS.STARTED && <PlaySession room={room} api={api} roomId={roomId} user={user}/>}\r\n            {status === STATUS.FINISHED && <ScoreBoard room={room}/>}\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {MISSION_OPT, missionStatusTitle, OP_STATUS, STATUS, TEAM, VOTE} from \"../../../api/enum\";\r\nimport {teamTraits} from \"../../../domain/roles\";\r\nimport * as classnames from \"classnames\";\r\n\r\nexport class History extends React.Component {\r\n\r\n    render() {\r\n        const {room: {missions, score, members, status}} = this.props;\r\n        if(status === STATUS.NEW) return <h3 className=\"ui center aligned header\">Game is not started yet</h3>;\r\n        return <React.Fragment>\r\n            <h1 className=\"ui center aligned header\">\r\n                <span className={teamTraits[TEAM.GOOD].color}>{score[TEAM.GOOD]}</span>&nbsp;:&nbsp;\r\n                <span className={teamTraits[TEAM.BAD].color}>{score[TEAM.BAD]}</span>\r\n            </h1>\r\n            {missions.map((mission, id) => <div className=\"ui fluid card\" key={id}>\r\n                <div className=\"content\">\r\n                    <div className={`header ${classnames({'success': mission.status === OP_STATUS.SUCCESS, 'danger': mission.status === OP_STATUS.FAIL})} text`}>\r\n                        The {mission.name}\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        {missionStatusTitle[mission.status]}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <p>Leader: {members[mission.leader].login}</p>\r\n                        {OP_STATUS.isLater(OP_STATUS.PREPARE, mission.status) && <p>Operatives: {mission.participants.map((i, index) => [\r\n                            index>0 && \", \",\r\n                            <span key={i}>{members[i].login}</span>\r\n                        ])}</p>}\r\n                        {OP_STATUS.isLater(OP_STATUS.VOTE, mission.status) && <div className=\"ui mini horizontal divided list\">\r\n                                {Object.entries(mission.vote).map(([i,v]) => <div className=\"item\" key={i}>\r\n                                    {v === VOTE.YES ? <i className=\"thumbs up icon success text\"/> : <i className=\"thumbs down icon danger text\"/>}\r\n                                    <div className=\"content\">\r\n                                        <div className=\"header\">\r\n                                            {members[i].login}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>)}\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                {mission.result && OP_STATUS.isLater(OP_STATUS.PROGRESS, mission.status) && <div className=\"extra content center aligned\">Results:\r\n                    {Object.values(mission.result).map((r,i) => r === MISSION_OPT.FAIL ? <i className=\"ui icon close danger text\" key={i}/> : <i className=\"ui icon check success text\" key={i}/>)}\r\n                </div>}\r\n            </div>)}\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Header} from \"semantic-ui-react\";\r\n\r\nimport {gameApi} from \"../../api/game\";\r\nimport {STATUS} from \"../../api/enum\";\r\nimport {BottomMenu} from \"./BottomMenu\";\r\nimport {MembersList} from \"./MembersList\";\r\nimport './index.css';\r\nimport {Board} from \"./Board\";\r\nimport {History} from \"./History\";\r\n\r\nexport const TABS = {\r\n    BOARD: 'BOARD',\r\n    MEMBERS: 'MEMBERS',\r\n    HISTORY: 'HISTORY'\r\n};\r\n\r\nexport class Room extends React.Component {\r\n\r\n    state = {\r\n        room: null,\r\n        errMsg: null,\r\n        tab: TABS.BOARD\r\n    };\r\n\r\n    removeListener = null;\r\n\r\n    render() {\r\n        const {login, roomId, setVision} = this.props;\r\n        const {room, errMsg, tab} = this.state;\r\n        const user = room && room.members.find(u => u.login === login);\r\n        return user && room ?\r\n                <div className=\"room\">\r\n                    {errMsg && <div className=\"ui negative message room-msg\">\r\n                        <div className=\"header\">Something went wrong</div>\r\n                        <p>{errMsg}</p>\r\n                    </div>}\r\n                    <div className=\"room-content\">\r\n                        {tab === TABS.MEMBERS &&\r\n                            <MembersList room={room} user={user} api={gameApi} roomId={roomId} onLeave={() => this.leave()} setVision={setVision}/>\r\n                        }\r\n                        {tab === TABS.BOARD && <Board room={room} user={user} roomId={roomId} api={gameApi}/>}\r\n                        {tab === TABS.HISTORY && <History room={room} user={user}/>}\r\n                    </div>\r\n                    <BottomMenu onTabSet={(tab)=>this.setState({tab})} tab={tab}/>\r\n                </div>\r\n             : <Header centered=\"true\" as='h5'>Searching for a room</Header>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {roomId} = this.props;\r\n        this.removeListener = gameApi.listenRoom(roomId, (room) => {\r\n            this.setState({\r\n                room: room.data()\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(this.removeListener){\r\n            this.removeListener();\r\n            this.removeListener = null;\r\n        }\r\n    }\r\n\r\n    start = () => {\r\n        this.clearErr();\r\n        const {room} = this.state;\r\n        const {roomId} = this.props;\r\n        if(room.status === STATUS.NEW && room.members.length >= 1 && room.members.length < 10){\r\n            gameApi.start(roomId).catch(err => {\r\n                this.setState({\r\n                    errMsg: err.message || 'Unknown error'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    end = () => {\r\n        this.clearErr();\r\n        const {roomId} = this.props;\r\n        gameApi.end(roomId).catch(err => {\r\n            this.setState({\r\n                errMsg: err.message || 'Unknown error'\r\n            })\r\n        });\r\n    };\r\n\r\n    clearErr = () => {\r\n        this.setState({\r\n            errMsg: null\r\n        })\r\n    };\r\n\r\n    leave(){\r\n        const {onLeave} = this.props;\r\n        onLeave && onLeave();\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nfunction setCred(cred){\r\n    localStorage.setItem('cred', JSON.stringify(cred));\r\n}\r\n\r\nfunction clearCred() {\r\n    localStorage.removeItem('cred');\r\n}\r\n\r\nfunction getCred() {\r\n    const str = localStorage.getItem('cred');\r\n    return str ? JSON.parse(str) : null;\r\n}\r\n\r\nexport const credApi = {setCred, getCred, clearCred};","import React from \"react\";\r\nimport {Enter} from \"../Enter\";\r\nimport {Room} from \"../Room\";\r\nimport {gameApi} from \"../../api/game\";\r\nimport {credApi} from \"../../api/store\";\r\nimport {getGameId} from \"../../api/util\";\r\n\r\nexport class App extends React.Component {\r\n\r\n    state = {\r\n        roomId: null,\r\n        login: null,\r\n        secret: null,\r\n        ready: false\r\n    };\r\n\r\n    render() {\r\n        const {roomId, login, secret} = this.state;\r\n\r\n        return <React.Fragment>\r\n                    {!roomId && <Enter onEnter={this.onEnter}/>}\r\n                    {roomId && <Room roomId={roomId} login={login} secret={secret} onLeave={this.onLeave} setVision={this.setVision}/>}\r\n            </React.Fragment>\r\n    }\r\n\r\n    onEnter = (cred) => {\r\n        credApi.setCred(cred);\r\n        this.setState({\r\n            ...cred\r\n        })\r\n    };\r\n\r\n    onLeave = () => {\r\n        credApi.clearCred();\r\n        window.location = '';\r\n    };\r\n\r\n    setVision = (login) => {\r\n        this.setState({\r\n            login\r\n        })\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.tryLogin();\r\n    }\r\n\r\n    tryLogin = () => {\r\n        const id = getGameId();\r\n        const cred = credApi.getCred();\r\n        if(cred && (!id || cred.roomId === id)){\r\n            gameApi.login(cred).then(() => {\r\n                this.setState({\r\n                    ...cred\r\n                })\r\n            }).catch((e) => {\r\n                console.error('Failed to rejoin the game', e);\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}